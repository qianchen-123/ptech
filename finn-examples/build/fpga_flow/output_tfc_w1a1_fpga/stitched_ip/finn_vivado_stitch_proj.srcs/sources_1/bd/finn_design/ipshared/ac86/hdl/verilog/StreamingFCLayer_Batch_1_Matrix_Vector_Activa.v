// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_1_Matrix_Vector_Activa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        weight_V_V_TDATA,
        weight_V_V_TVALID,
        weight_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [7:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
input  [63:0] weight_V_V_TDATA;
input   weight_V_V_TVALID;
output   weight_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;
reg weight_V_V_TREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] threshs_m_thresholds_7_address0;
reg    threshs_m_thresholds_7_ce0;
wire   [5:0] threshs_m_thresholds_7_q0;
wire   [2:0] threshs_m_thresholds_6_address0;
reg    threshs_m_thresholds_6_ce0;
wire   [5:0] threshs_m_thresholds_6_q0;
wire   [2:0] threshs_m_thresholds_5_address0;
reg    threshs_m_thresholds_5_ce0;
wire   [5:0] threshs_m_thresholds_5_q0;
wire   [2:0] threshs_m_thresholds_4_address0;
reg    threshs_m_thresholds_4_ce0;
wire   [5:0] threshs_m_thresholds_4_q0;
wire   [2:0] threshs_m_thresholds_3_address0;
reg    threshs_m_thresholds_3_ce0;
wire   [5:0] threshs_m_thresholds_3_q0;
wire   [2:0] threshs_m_thresholds_2_address0;
reg    threshs_m_thresholds_2_ce0;
wire   [5:0] threshs_m_thresholds_2_q0;
wire   [2:0] threshs_m_thresholds_1_address0;
reg    threshs_m_thresholds_1_ce0;
wire   [5:0] threshs_m_thresholds_1_q0;
wire   [2:0] threshs_m_thresholds_address0;
reg    threshs_m_thresholds_ce0;
wire   [5:0] threshs_m_thresholds_q0;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln248_fu_458_p2;
wire   [0:0] icmp_ln252_fu_473_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln289_reg_3503;
reg    weight_V_V_TDATA_blk_n;
reg   [6:0] i_0_reg_427;
reg    ap_predicate_op51_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] i_fu_464_p2;
wire   [0:0] icmp_ln271_fu_798_p2;
reg   [0:0] icmp_ln271_reg_3331;
wire   [0:0] xor_ln879_9_fu_974_p2;
reg   [0:0] xor_ln879_9_reg_3343;
wire   [0:0] xor_ln879_11_fu_994_p2;
reg   [0:0] xor_ln879_11_reg_3348;
wire   [0:0] xor_ln879_13_fu_1014_p2;
reg   [0:0] xor_ln879_13_reg_3353;
wire   [2:0] add_ln700_6_fu_1070_p2;
reg   [2:0] add_ln700_6_reg_3358;
wire   [0:0] xor_ln879_25_fu_1210_p2;
reg   [0:0] xor_ln879_25_reg_3363;
wire   [0:0] xor_ln879_27_fu_1222_p2;
reg   [0:0] xor_ln879_27_reg_3368;
wire   [0:0] xor_ln879_29_fu_1234_p2;
reg   [0:0] xor_ln879_29_reg_3373;
wire   [2:0] add_ln700_14_fu_1282_p2;
reg   [2:0] add_ln700_14_reg_3378;
wire   [0:0] xor_ln879_41_fu_1422_p2;
reg   [0:0] xor_ln879_41_reg_3383;
wire   [0:0] xor_ln879_43_fu_1434_p2;
reg   [0:0] xor_ln879_43_reg_3388;
wire   [0:0] xor_ln879_45_fu_1446_p2;
reg   [0:0] xor_ln879_45_reg_3393;
wire   [2:0] add_ln700_22_fu_1494_p2;
reg   [2:0] add_ln700_22_reg_3398;
wire   [0:0] xor_ln879_57_fu_1634_p2;
reg   [0:0] xor_ln879_57_reg_3403;
wire   [0:0] xor_ln879_59_fu_1646_p2;
reg   [0:0] xor_ln879_59_reg_3408;
wire   [0:0] xor_ln879_61_fu_1658_p2;
reg   [0:0] xor_ln879_61_reg_3413;
wire   [2:0] add_ln700_30_fu_1706_p2;
reg   [2:0] add_ln700_30_reg_3418;
wire   [0:0] xor_ln879_73_fu_1846_p2;
reg   [0:0] xor_ln879_73_reg_3423;
wire   [0:0] xor_ln879_75_fu_1858_p2;
reg   [0:0] xor_ln879_75_reg_3428;
wire   [0:0] xor_ln879_77_fu_1870_p2;
reg   [0:0] xor_ln879_77_reg_3433;
wire   [2:0] add_ln700_38_fu_1918_p2;
reg   [2:0] add_ln700_38_reg_3438;
wire   [0:0] xor_ln879_89_fu_2058_p2;
reg   [0:0] xor_ln879_89_reg_3443;
wire   [0:0] xor_ln879_91_fu_2070_p2;
reg   [0:0] xor_ln879_91_reg_3448;
wire   [0:0] xor_ln879_93_fu_2082_p2;
reg   [0:0] xor_ln879_93_reg_3453;
wire   [2:0] add_ln700_46_fu_2130_p2;
reg   [2:0] add_ln700_46_reg_3458;
wire   [0:0] xor_ln879_105_fu_2270_p2;
reg   [0:0] xor_ln879_105_reg_3463;
wire   [0:0] xor_ln879_107_fu_2282_p2;
reg   [0:0] xor_ln879_107_reg_3468;
wire   [0:0] xor_ln879_109_fu_2294_p2;
reg   [0:0] xor_ln879_109_reg_3473;
wire   [2:0] add_ln700_54_fu_2342_p2;
reg   [2:0] add_ln700_54_reg_3478;
wire   [0:0] xor_ln879_121_fu_2482_p2;
reg   [0:0] xor_ln879_121_reg_3483;
wire   [0:0] xor_ln879_123_fu_2494_p2;
reg   [0:0] xor_ln879_123_reg_3488;
wire   [0:0] xor_ln879_125_fu_2506_p2;
reg   [0:0] xor_ln879_125_reg_3493;
wire   [2:0] add_ln700_62_fu_2554_p2;
reg   [2:0] add_ln700_62_reg_3498;
wire   [0:0] icmp_ln289_fu_2566_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [7:0] ap_phi_mux_act_m_val_V_phi_fu_441_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_438;
wire   [7:0] inElem_V_fu_510_p10;
wire   [63:0] zext_ln186_fu_2580_p1;
reg   [6:0] accu_V_0_0_0_fu_232;
wire   [6:0] accu_0_0_V_fu_2731_p2;
reg   [6:0] accu_V_0_1_0_fu_236;
wire   [6:0] accu_0_1_V_fu_2771_p2;
reg   [6:0] accu_V_0_2_0_fu_240;
wire   [6:0] accu_0_2_V_fu_2811_p2;
reg   [6:0] accu_V_0_3_0_fu_244;
wire   [6:0] accu_0_3_V_fu_2851_p2;
reg   [6:0] accu_V_0_4_0_fu_248;
wire   [6:0] accu_0_4_V_fu_2891_p2;
reg   [6:0] accu_V_0_5_0_fu_252;
wire   [6:0] accu_0_5_V_fu_2931_p2;
reg   [6:0] accu_V_0_6_0_fu_256;
wire   [6:0] accu_0_6_V_fu_2971_p2;
reg   [6:0] accu_V_0_7_0_fu_260;
wire   [6:0] accu_0_7_V_fu_3011_p2;
reg   [31:0] sf_1_fu_264;
wire   [31:0] sf_fu_2560_p2;
reg   [31:0] nf_assign_fu_268;
wire   [31:0] select_ln301_fu_2604_p3;
reg   [7:0] inputBuf_7_V_1_fu_272;
wire   [7:0] inputBuf_7_V_17_fu_747_p3;
reg   [7:0] inputBuf_7_V_2_fu_276;
wire   [7:0] inputBuf_7_V_16_fu_739_p3;
reg   [7:0] inputBuf_7_V_4_fu_280;
wire   [7:0] inputBuf_7_V_14_fu_723_p3;
reg   [7:0] inputBuf_7_V_6_fu_284;
wire   [7:0] inputBuf_7_V_13_fu_707_p3;
reg   [7:0] inputBuf_7_V_5_fu_288;
wire   [7:0] inputBuf_7_V_12_fu_683_p3;
reg   [7:0] inputBuf_7_V_3_fu_292;
wire   [7:0] inputBuf_7_V_11_fu_667_p3;
reg   [7:0] inputBuf_7_V_7_fu_296;
wire   [7:0] inputBuf_7_V_10_fu_643_p3;
reg   [7:0] inputBuf_7_V_8_fu_300;
wire   [7:0] inputBuf_7_V_fu_619_p3;
reg    ap_block_pp0_stage0_01001;
wire   [2:0] inElem_V_fu_510_p9;
wire   [2:0] trunc_ln321_fu_533_p1;
wire   [0:0] icmp_ln321_6_fu_573_p2;
wire   [0:0] icmp_ln321_5_fu_567_p2;
wire   [0:0] icmp_ln321_4_fu_561_p2;
wire   [0:0] icmp_ln321_3_fu_555_p2;
wire   [0:0] icmp_ln321_2_fu_549_p2;
wire   [0:0] icmp_ln321_1_fu_543_p2;
wire   [0:0] icmp_ln321_fu_537_p2;
wire   [0:0] or_ln321_fu_579_p2;
wire   [0:0] or_ln321_1_fu_585_p2;
wire   [0:0] or_ln321_2_fu_591_p2;
wire   [7:0] select_ln321_fu_597_p3;
wire   [0:0] or_ln321_3_fu_605_p2;
wire   [7:0] select_ln321_1_fu_611_p3;
wire   [7:0] select_ln321_3_fu_627_p3;
wire   [7:0] select_ln321_4_fu_635_p3;
wire   [7:0] select_ln321_6_fu_651_p3;
wire   [7:0] select_ln321_7_fu_659_p3;
wire   [7:0] select_ln321_9_fu_675_p3;
wire   [7:0] select_ln321_11_fu_691_p3;
wire   [7:0] select_ln321_12_fu_699_p3;
wire   [7:0] select_ln321_14_fu_715_p3;
wire   [7:0] inputBuf_7_V_15_fu_731_p3;
wire   [0:0] p_Result_2_fu_864_p3;
wire   [0:0] trunc_ln647_fu_804_p1;
wire   [0:0] xor_ln879_fu_872_p2;
wire   [0:0] xor_ln879_1_fu_878_p2;
wire   [0:0] p_Result_2_0_1_fu_888_p3;
wire   [0:0] tmp_64_fu_808_p3;
wire   [0:0] xor_ln879_2_fu_896_p2;
wire   [0:0] xor_ln879_3_fu_902_p2;
wire   [0:0] p_Result_2_0_2_fu_912_p3;
wire   [0:0] tmp_65_fu_816_p3;
wire   [0:0] xor_ln879_4_fu_920_p2;
wire   [0:0] xor_ln879_5_fu_926_p2;
wire   [0:0] p_Result_2_0_3_fu_936_p3;
wire   [0:0] tmp_66_fu_824_p3;
wire   [0:0] xor_ln879_6_fu_944_p2;
wire   [0:0] xor_ln879_7_fu_950_p2;
wire   [0:0] p_Result_2_0_4_fu_960_p3;
wire   [0:0] tmp_67_fu_832_p3;
wire   [0:0] xor_ln879_8_fu_968_p2;
wire   [0:0] p_Result_2_0_5_fu_980_p3;
wire   [0:0] tmp_68_fu_840_p3;
wire   [0:0] xor_ln879_10_fu_988_p2;
wire   [0:0] p_Result_2_0_6_fu_1000_p3;
wire   [0:0] tmp_69_fu_848_p3;
wire   [0:0] xor_ln879_12_fu_1008_p2;
wire   [0:0] p_Result_2_0_7_fu_1020_p3;
wire   [0:0] tmp_70_fu_856_p3;
wire   [0:0] xor_ln879_14_fu_1028_p2;
wire   [0:0] xor_ln879_15_fu_1034_p2;
wire   [1:0] zext_ln170_fu_884_p1;
wire   [1:0] zext_ln170_3_fu_956_p1;
wire   [1:0] add_ln700_3_fu_1044_p2;
wire   [1:0] zext_ln700_1_fu_1040_p1;
wire   [1:0] zext_ln170_1_fu_908_p1;
wire   [1:0] zext_ln170_2_fu_932_p1;
wire   [1:0] add_ln700_4_fu_1054_p2;
wire   [1:0] add_ln700_5_fu_1060_p2;
wire   [2:0] zext_ln700_3_fu_1050_p1;
wire   [2:0] zext_ln700_4_fu_1066_p1;
wire   [0:0] tmp_71_fu_1076_p3;
wire   [0:0] xor_ln879_16_fu_1140_p2;
wire   [0:0] xor_ln879_17_fu_1146_p2;
wire   [0:0] tmp_72_fu_1084_p3;
wire   [0:0] xor_ln879_18_fu_1156_p2;
wire   [0:0] xor_ln879_19_fu_1162_p2;
wire   [0:0] tmp_73_fu_1092_p3;
wire   [0:0] xor_ln879_20_fu_1172_p2;
wire   [0:0] xor_ln879_21_fu_1178_p2;
wire   [0:0] tmp_74_fu_1100_p3;
wire   [0:0] xor_ln879_22_fu_1188_p2;
wire   [0:0] xor_ln879_23_fu_1194_p2;
wire   [0:0] tmp_75_fu_1108_p3;
wire   [0:0] xor_ln879_24_fu_1204_p2;
wire   [0:0] tmp_76_fu_1116_p3;
wire   [0:0] xor_ln879_26_fu_1216_p2;
wire   [0:0] tmp_77_fu_1124_p3;
wire   [0:0] xor_ln879_28_fu_1228_p2;
wire   [0:0] tmp_78_fu_1132_p3;
wire   [0:0] xor_ln879_30_fu_1240_p2;
wire   [0:0] xor_ln879_31_fu_1246_p2;
wire   [1:0] zext_ln170_6_fu_1152_p1;
wire   [1:0] zext_ln170_9_fu_1200_p1;
wire   [1:0] add_ln700_11_fu_1256_p2;
wire   [1:0] zext_ln700_7_fu_1252_p1;
wire   [1:0] zext_ln170_7_fu_1168_p1;
wire   [1:0] zext_ln170_8_fu_1184_p1;
wire   [1:0] add_ln700_12_fu_1266_p2;
wire   [1:0] add_ln700_13_fu_1272_p2;
wire   [2:0] zext_ln700_9_fu_1262_p1;
wire   [2:0] zext_ln700_10_fu_1278_p1;
wire   [0:0] tmp_79_fu_1288_p3;
wire   [0:0] xor_ln879_32_fu_1352_p2;
wire   [0:0] xor_ln879_33_fu_1358_p2;
wire   [0:0] tmp_80_fu_1296_p3;
wire   [0:0] xor_ln879_34_fu_1368_p2;
wire   [0:0] xor_ln879_35_fu_1374_p2;
wire   [0:0] tmp_81_fu_1304_p3;
wire   [0:0] xor_ln879_36_fu_1384_p2;
wire   [0:0] xor_ln879_37_fu_1390_p2;
wire   [0:0] tmp_82_fu_1312_p3;
wire   [0:0] xor_ln879_38_fu_1400_p2;
wire   [0:0] xor_ln879_39_fu_1406_p2;
wire   [0:0] tmp_83_fu_1320_p3;
wire   [0:0] xor_ln879_40_fu_1416_p2;
wire   [0:0] tmp_84_fu_1328_p3;
wire   [0:0] xor_ln879_42_fu_1428_p2;
wire   [0:0] tmp_85_fu_1336_p3;
wire   [0:0] xor_ln879_44_fu_1440_p2;
wire   [0:0] tmp_86_fu_1344_p3;
wire   [0:0] xor_ln879_46_fu_1452_p2;
wire   [0:0] xor_ln879_47_fu_1458_p2;
wire   [1:0] zext_ln170_12_fu_1364_p1;
wire   [1:0] zext_ln170_15_fu_1412_p1;
wire   [1:0] add_ln700_19_fu_1468_p2;
wire   [1:0] zext_ln700_13_fu_1464_p1;
wire   [1:0] zext_ln170_13_fu_1380_p1;
wire   [1:0] zext_ln170_14_fu_1396_p1;
wire   [1:0] add_ln700_20_fu_1478_p2;
wire   [1:0] add_ln700_21_fu_1484_p2;
wire   [2:0] zext_ln700_15_fu_1474_p1;
wire   [2:0] zext_ln700_16_fu_1490_p1;
wire   [0:0] tmp_87_fu_1500_p3;
wire   [0:0] xor_ln879_48_fu_1564_p2;
wire   [0:0] xor_ln879_49_fu_1570_p2;
wire   [0:0] tmp_88_fu_1508_p3;
wire   [0:0] xor_ln879_50_fu_1580_p2;
wire   [0:0] xor_ln879_51_fu_1586_p2;
wire   [0:0] tmp_89_fu_1516_p3;
wire   [0:0] xor_ln879_52_fu_1596_p2;
wire   [0:0] xor_ln879_53_fu_1602_p2;
wire   [0:0] tmp_90_fu_1524_p3;
wire   [0:0] xor_ln879_54_fu_1612_p2;
wire   [0:0] xor_ln879_55_fu_1618_p2;
wire   [0:0] tmp_91_fu_1532_p3;
wire   [0:0] xor_ln879_56_fu_1628_p2;
wire   [0:0] tmp_92_fu_1540_p3;
wire   [0:0] xor_ln879_58_fu_1640_p2;
wire   [0:0] tmp_93_fu_1548_p3;
wire   [0:0] xor_ln879_60_fu_1652_p2;
wire   [0:0] tmp_94_fu_1556_p3;
wire   [0:0] xor_ln879_62_fu_1664_p2;
wire   [0:0] xor_ln879_63_fu_1670_p2;
wire   [1:0] zext_ln170_18_fu_1576_p1;
wire   [1:0] zext_ln170_21_fu_1624_p1;
wire   [1:0] add_ln700_27_fu_1680_p2;
wire   [1:0] zext_ln700_19_fu_1676_p1;
wire   [1:0] zext_ln170_19_fu_1592_p1;
wire   [1:0] zext_ln170_20_fu_1608_p1;
wire   [1:0] add_ln700_28_fu_1690_p2;
wire   [1:0] add_ln700_29_fu_1696_p2;
wire   [2:0] zext_ln700_21_fu_1686_p1;
wire   [2:0] zext_ln700_22_fu_1702_p1;
wire   [0:0] tmp_95_fu_1712_p3;
wire   [0:0] xor_ln879_64_fu_1776_p2;
wire   [0:0] xor_ln879_65_fu_1782_p2;
wire   [0:0] tmp_96_fu_1720_p3;
wire   [0:0] xor_ln879_66_fu_1792_p2;
wire   [0:0] xor_ln879_67_fu_1798_p2;
wire   [0:0] tmp_97_fu_1728_p3;
wire   [0:0] xor_ln879_68_fu_1808_p2;
wire   [0:0] xor_ln879_69_fu_1814_p2;
wire   [0:0] tmp_98_fu_1736_p3;
wire   [0:0] xor_ln879_70_fu_1824_p2;
wire   [0:0] xor_ln879_71_fu_1830_p2;
wire   [0:0] tmp_99_fu_1744_p3;
wire   [0:0] xor_ln879_72_fu_1840_p2;
wire   [0:0] tmp_100_fu_1752_p3;
wire   [0:0] xor_ln879_74_fu_1852_p2;
wire   [0:0] tmp_101_fu_1760_p3;
wire   [0:0] xor_ln879_76_fu_1864_p2;
wire   [0:0] tmp_102_fu_1768_p3;
wire   [0:0] xor_ln879_78_fu_1876_p2;
wire   [0:0] xor_ln879_79_fu_1882_p2;
wire   [1:0] zext_ln170_24_fu_1788_p1;
wire   [1:0] zext_ln170_27_fu_1836_p1;
wire   [1:0] add_ln700_35_fu_1892_p2;
wire   [1:0] zext_ln700_25_fu_1888_p1;
wire   [1:0] zext_ln170_25_fu_1804_p1;
wire   [1:0] zext_ln170_26_fu_1820_p1;
wire   [1:0] add_ln700_36_fu_1902_p2;
wire   [1:0] add_ln700_37_fu_1908_p2;
wire   [2:0] zext_ln700_27_fu_1898_p1;
wire   [2:0] zext_ln700_28_fu_1914_p1;
wire   [0:0] tmp_103_fu_1924_p3;
wire   [0:0] xor_ln879_80_fu_1988_p2;
wire   [0:0] xor_ln879_81_fu_1994_p2;
wire   [0:0] tmp_104_fu_1932_p3;
wire   [0:0] xor_ln879_82_fu_2004_p2;
wire   [0:0] xor_ln879_83_fu_2010_p2;
wire   [0:0] tmp_105_fu_1940_p3;
wire   [0:0] xor_ln879_84_fu_2020_p2;
wire   [0:0] xor_ln879_85_fu_2026_p2;
wire   [0:0] tmp_106_fu_1948_p3;
wire   [0:0] xor_ln879_86_fu_2036_p2;
wire   [0:0] xor_ln879_87_fu_2042_p2;
wire   [0:0] tmp_107_fu_1956_p3;
wire   [0:0] xor_ln879_88_fu_2052_p2;
wire   [0:0] tmp_108_fu_1964_p3;
wire   [0:0] xor_ln879_90_fu_2064_p2;
wire   [0:0] tmp_109_fu_1972_p3;
wire   [0:0] xor_ln879_92_fu_2076_p2;
wire   [0:0] tmp_110_fu_1980_p3;
wire   [0:0] xor_ln879_94_fu_2088_p2;
wire   [0:0] xor_ln879_95_fu_2094_p2;
wire   [1:0] zext_ln170_30_fu_2000_p1;
wire   [1:0] zext_ln170_33_fu_2048_p1;
wire   [1:0] add_ln700_43_fu_2104_p2;
wire   [1:0] zext_ln700_31_fu_2100_p1;
wire   [1:0] zext_ln170_31_fu_2016_p1;
wire   [1:0] zext_ln170_32_fu_2032_p1;
wire   [1:0] add_ln700_44_fu_2114_p2;
wire   [1:0] add_ln700_45_fu_2120_p2;
wire   [2:0] zext_ln700_33_fu_2110_p1;
wire   [2:0] zext_ln700_34_fu_2126_p1;
wire   [0:0] tmp_111_fu_2136_p3;
wire   [0:0] xor_ln879_96_fu_2200_p2;
wire   [0:0] xor_ln879_97_fu_2206_p2;
wire   [0:0] tmp_112_fu_2144_p3;
wire   [0:0] xor_ln879_98_fu_2216_p2;
wire   [0:0] xor_ln879_99_fu_2222_p2;
wire   [0:0] tmp_113_fu_2152_p3;
wire   [0:0] xor_ln879_100_fu_2232_p2;
wire   [0:0] xor_ln879_101_fu_2238_p2;
wire   [0:0] tmp_114_fu_2160_p3;
wire   [0:0] xor_ln879_102_fu_2248_p2;
wire   [0:0] xor_ln879_103_fu_2254_p2;
wire   [0:0] tmp_115_fu_2168_p3;
wire   [0:0] xor_ln879_104_fu_2264_p2;
wire   [0:0] tmp_116_fu_2176_p3;
wire   [0:0] xor_ln879_106_fu_2276_p2;
wire   [0:0] tmp_117_fu_2184_p3;
wire   [0:0] xor_ln879_108_fu_2288_p2;
wire   [0:0] tmp_118_fu_2192_p3;
wire   [0:0] xor_ln879_110_fu_2300_p2;
wire   [0:0] xor_ln879_111_fu_2306_p2;
wire   [1:0] zext_ln170_36_fu_2212_p1;
wire   [1:0] zext_ln170_39_fu_2260_p1;
wire   [1:0] add_ln700_51_fu_2316_p2;
wire   [1:0] zext_ln700_37_fu_2312_p1;
wire   [1:0] zext_ln170_37_fu_2228_p1;
wire   [1:0] zext_ln170_38_fu_2244_p1;
wire   [1:0] add_ln700_52_fu_2326_p2;
wire   [1:0] add_ln700_53_fu_2332_p2;
wire   [2:0] zext_ln700_39_fu_2322_p1;
wire   [2:0] zext_ln700_40_fu_2338_p1;
wire   [0:0] tmp_119_fu_2348_p3;
wire   [0:0] xor_ln879_112_fu_2412_p2;
wire   [0:0] xor_ln879_113_fu_2418_p2;
wire   [0:0] tmp_120_fu_2356_p3;
wire   [0:0] xor_ln879_114_fu_2428_p2;
wire   [0:0] xor_ln879_115_fu_2434_p2;
wire   [0:0] tmp_121_fu_2364_p3;
wire   [0:0] xor_ln879_116_fu_2444_p2;
wire   [0:0] xor_ln879_117_fu_2450_p2;
wire   [0:0] tmp_122_fu_2372_p3;
wire   [0:0] xor_ln879_118_fu_2460_p2;
wire   [0:0] xor_ln879_119_fu_2466_p2;
wire   [0:0] tmp_123_fu_2380_p3;
wire   [0:0] xor_ln879_120_fu_2476_p2;
wire   [0:0] tmp_124_fu_2388_p3;
wire   [0:0] xor_ln879_122_fu_2488_p2;
wire   [0:0] tmp_125_fu_2396_p3;
wire   [0:0] xor_ln879_124_fu_2500_p2;
wire   [0:0] tmp_126_fu_2404_p3;
wire   [0:0] xor_ln879_126_fu_2512_p2;
wire   [0:0] xor_ln879_127_fu_2518_p2;
wire   [1:0] zext_ln170_42_fu_2424_p1;
wire   [1:0] zext_ln170_45_fu_2472_p1;
wire   [1:0] add_ln700_59_fu_2528_p2;
wire   [1:0] zext_ln700_43_fu_2524_p1;
wire   [1:0] zext_ln170_43_fu_2440_p1;
wire   [1:0] zext_ln170_44_fu_2456_p1;
wire   [1:0] add_ln700_60_fu_2538_p2;
wire   [1:0] add_ln700_61_fu_2544_p2;
wire   [2:0] zext_ln700_45_fu_2534_p1;
wire   [2:0] zext_ln700_46_fu_2550_p1;
wire   [31:0] nf_fu_2592_p2;
wire   [0:0] icmp_ln301_fu_2598_p2;
wire   [6:0] zext_ln700_fu_2700_p1;
wire   [6:0] select_ln271_7_fu_2690_p3;
wire   [1:0] zext_ln170_4_fu_2697_p1;
wire   [1:0] zext_ln170_5_fu_2703_p1;
wire   [1:0] add_ln700_1_fu_2712_p2;
wire   [6:0] add_ln700_fu_2706_p2;
wire   [6:0] zext_ln700_2_fu_2718_p1;
wire   [6:0] add_ln700_2_fu_2722_p2;
wire   [6:0] zext_ln700_5_fu_2728_p1;
wire   [6:0] zext_ln700_6_fu_2740_p1;
wire   [6:0] select_ln271_6_fu_2683_p3;
wire   [1:0] zext_ln170_10_fu_2737_p1;
wire   [1:0] zext_ln170_11_fu_2743_p1;
wire   [1:0] add_ln700_9_fu_2752_p2;
wire   [6:0] add_ln700_8_fu_2746_p2;
wire   [6:0] zext_ln700_8_fu_2758_p1;
wire   [6:0] add_ln700_10_fu_2762_p2;
wire   [6:0] zext_ln700_11_fu_2768_p1;
wire   [6:0] zext_ln700_12_fu_2780_p1;
wire   [6:0] select_ln271_5_fu_2676_p3;
wire   [1:0] zext_ln170_16_fu_2777_p1;
wire   [1:0] zext_ln170_17_fu_2783_p1;
wire   [1:0] add_ln700_17_fu_2792_p2;
wire   [6:0] add_ln700_16_fu_2786_p2;
wire   [6:0] zext_ln700_14_fu_2798_p1;
wire   [6:0] add_ln700_18_fu_2802_p2;
wire   [6:0] zext_ln700_17_fu_2808_p1;
wire   [6:0] zext_ln700_18_fu_2820_p1;
wire   [6:0] select_ln271_4_fu_2669_p3;
wire   [1:0] zext_ln170_22_fu_2817_p1;
wire   [1:0] zext_ln170_23_fu_2823_p1;
wire   [1:0] add_ln700_25_fu_2832_p2;
wire   [6:0] add_ln700_24_fu_2826_p2;
wire   [6:0] zext_ln700_20_fu_2838_p1;
wire   [6:0] add_ln700_26_fu_2842_p2;
wire   [6:0] zext_ln700_23_fu_2848_p1;
wire   [6:0] zext_ln700_24_fu_2860_p1;
wire   [6:0] select_ln271_3_fu_2662_p3;
wire   [1:0] zext_ln170_28_fu_2857_p1;
wire   [1:0] zext_ln170_29_fu_2863_p1;
wire   [1:0] add_ln700_33_fu_2872_p2;
wire   [6:0] add_ln700_32_fu_2866_p2;
wire   [6:0] zext_ln700_26_fu_2878_p1;
wire   [6:0] add_ln700_34_fu_2882_p2;
wire   [6:0] zext_ln700_29_fu_2888_p1;
wire   [6:0] zext_ln700_30_fu_2900_p1;
wire   [6:0] select_ln271_2_fu_2655_p3;
wire   [1:0] zext_ln170_34_fu_2897_p1;
wire   [1:0] zext_ln170_35_fu_2903_p1;
wire   [1:0] add_ln700_41_fu_2912_p2;
wire   [6:0] add_ln700_40_fu_2906_p2;
wire   [6:0] zext_ln700_32_fu_2918_p1;
wire   [6:0] add_ln700_42_fu_2922_p2;
wire   [6:0] zext_ln700_35_fu_2928_p1;
wire   [6:0] zext_ln700_36_fu_2940_p1;
wire   [6:0] select_ln271_1_fu_2648_p3;
wire   [1:0] zext_ln170_40_fu_2937_p1;
wire   [1:0] zext_ln170_41_fu_2943_p1;
wire   [1:0] add_ln700_49_fu_2952_p2;
wire   [6:0] add_ln700_48_fu_2946_p2;
wire   [6:0] zext_ln700_38_fu_2958_p1;
wire   [6:0] add_ln700_50_fu_2962_p2;
wire   [6:0] zext_ln700_41_fu_2968_p1;
wire   [6:0] zext_ln700_42_fu_2980_p1;
wire   [6:0] select_ln271_fu_2641_p3;
wire   [1:0] zext_ln170_46_fu_2977_p1;
wire   [1:0] zext_ln170_47_fu_2983_p1;
wire   [1:0] add_ln700_57_fu_2992_p2;
wire   [6:0] add_ln700_56_fu_2986_p2;
wire   [6:0] zext_ln700_44_fu_2998_p1;
wire   [6:0] add_ln700_58_fu_3002_p2;
wire   [6:0] zext_ln700_47_fu_3008_p1;
wire   [6:0] zext_ln186_1_fu_3057_p1;
wire   [0:0] icmp_ln899_fu_3061_p2;
wire   [6:0] zext_ln186_2_fu_3073_p1;
wire   [0:0] icmp_ln899_1_fu_3077_p2;
wire   [6:0] zext_ln186_3_fu_3089_p1;
wire   [0:0] icmp_ln899_2_fu_3093_p2;
wire   [6:0] zext_ln186_4_fu_3105_p1;
wire   [0:0] icmp_ln899_3_fu_3109_p2;
wire   [6:0] zext_ln186_5_fu_3121_p1;
wire   [0:0] icmp_ln899_4_fu_3125_p2;
wire   [6:0] zext_ln186_6_fu_3137_p1;
wire   [0:0] icmp_ln899_5_fu_3141_p2;
wire   [6:0] zext_ln186_7_fu_3153_p1;
wire   [0:0] icmp_ln899_6_fu_3157_p2;
wire   [6:0] zext_ln186_8_fu_3169_p1;
wire   [0:0] icmp_ln899_7_fu_3173_p2;
wire   [0:0] xor_ln899_7_fu_3179_p2;
wire   [0:0] xor_ln899_6_fu_3163_p2;
wire   [0:0] xor_ln899_5_fu_3147_p2;
wire   [0:0] xor_ln899_4_fu_3131_p2;
wire   [0:0] xor_ln899_3_fu_3115_p2;
wire   [0:0] xor_ln899_2_fu_3099_p2;
wire   [0:0] xor_ln899_1_fu_3083_p2;
wire   [0:0] xor_ln899_fu_3067_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

StreamingFCLayer_Batch_1_Matrix_Vector_Actbkb #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_7_address0),
    .ce0(threshs_m_thresholds_7_ce0),
    .q0(threshs_m_thresholds_7_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actcud #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_6_address0),
    .ce0(threshs_m_thresholds_6_ce0),
    .q0(threshs_m_thresholds_6_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActdEe #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_5_address0),
    .ce0(threshs_m_thresholds_5_ce0),
    .q0(threshs_m_thresholds_5_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActeOg #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_4_address0),
    .ce0(threshs_m_thresholds_4_ce0),
    .q0(threshs_m_thresholds_4_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActfYi #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_3_address0),
    .ce0(threshs_m_thresholds_3_ce0),
    .q0(threshs_m_thresholds_3_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actg8j #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_2_address0),
    .ce0(threshs_m_thresholds_2_ce0),
    .q0(threshs_m_thresholds_2_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Acthbi #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_1_address0),
    .ce0(threshs_m_thresholds_1_ce0),
    .q0(threshs_m_thresholds_1_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actibs #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
threshs_m_thresholds_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_address0),
    .ce0(threshs_m_thresholds_ce0),
    .q0(threshs_m_thresholds_q0)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
StreamingFCLayer_jbC_U1(
    .din0(inputBuf_7_V_1_fu_272),
    .din1(inputBuf_7_V_2_fu_276),
    .din2(inputBuf_7_V_4_fu_280),
    .din3(inputBuf_7_V_6_fu_284),
    .din4(inputBuf_7_V_5_fu_288),
    .din5(inputBuf_7_V_3_fu_292),
    .din6(inputBuf_7_V_7_fu_296),
    .din7(inputBuf_7_V_8_fu_300),
    .din8(inElem_V_fu_510_p9),
    .dout(inElem_V_fu_510_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        i_0_reg_427 <= i_fu_464_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_427 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_2566_p2 == 1'd1) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        nf_assign_fu_268 <= select_ln301_fu_2604_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_268 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_2566_p2 == 1'd0) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        sf_1_fu_264 <= sf_fu_2560_p2;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_2566_p2 == 1'd1) & (icmp_ln248_fu_458_p2 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_1_fu_264 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accu_V_0_0_0_fu_232 <= accu_0_0_V_fu_2731_p2;
        accu_V_0_1_0_fu_236 <= accu_0_1_V_fu_2771_p2;
        accu_V_0_2_0_fu_240 <= accu_0_2_V_fu_2811_p2;
        accu_V_0_3_0_fu_244 <= accu_0_3_V_fu_2851_p2;
        accu_V_0_4_0_fu_248 <= accu_0_4_V_fu_2891_p2;
        accu_V_0_5_0_fu_252 <= accu_0_5_V_fu_2931_p2;
        accu_V_0_6_0_fu_256 <= accu_0_6_V_fu_2971_p2;
        accu_V_0_7_0_fu_260 <= accu_0_7_V_fu_3011_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        add_ln700_14_reg_3378 <= add_ln700_14_fu_1282_p2;
        add_ln700_22_reg_3398 <= add_ln700_22_fu_1494_p2;
        add_ln700_30_reg_3418 <= add_ln700_30_fu_1706_p2;
        add_ln700_38_reg_3438 <= add_ln700_38_fu_1918_p2;
        add_ln700_46_reg_3458 <= add_ln700_46_fu_2130_p2;
        add_ln700_54_reg_3478 <= add_ln700_54_fu_2342_p2;
        add_ln700_62_reg_3498 <= add_ln700_62_fu_2554_p2;
        add_ln700_6_reg_3358 <= add_ln700_6_fu_1070_p2;
        icmp_ln271_reg_3331 <= icmp_ln271_fu_798_p2;
        icmp_ln289_reg_3503 <= icmp_ln289_fu_2566_p2;
        xor_ln879_105_reg_3463 <= xor_ln879_105_fu_2270_p2;
        xor_ln879_107_reg_3468 <= xor_ln879_107_fu_2282_p2;
        xor_ln879_109_reg_3473 <= xor_ln879_109_fu_2294_p2;
        xor_ln879_11_reg_3348 <= xor_ln879_11_fu_994_p2;
        xor_ln879_121_reg_3483 <= xor_ln879_121_fu_2482_p2;
        xor_ln879_123_reg_3488 <= xor_ln879_123_fu_2494_p2;
        xor_ln879_125_reg_3493 <= xor_ln879_125_fu_2506_p2;
        xor_ln879_13_reg_3353 <= xor_ln879_13_fu_1014_p2;
        xor_ln879_25_reg_3363 <= xor_ln879_25_fu_1210_p2;
        xor_ln879_27_reg_3368 <= xor_ln879_27_fu_1222_p2;
        xor_ln879_29_reg_3373 <= xor_ln879_29_fu_1234_p2;
        xor_ln879_41_reg_3383 <= xor_ln879_41_fu_1422_p2;
        xor_ln879_43_reg_3388 <= xor_ln879_43_fu_1434_p2;
        xor_ln879_45_reg_3393 <= xor_ln879_45_fu_1446_p2;
        xor_ln879_57_reg_3403 <= xor_ln879_57_fu_1634_p2;
        xor_ln879_59_reg_3408 <= xor_ln879_59_fu_1646_p2;
        xor_ln879_61_reg_3413 <= xor_ln879_61_fu_1658_p2;
        xor_ln879_73_reg_3423 <= xor_ln879_73_fu_1846_p2;
        xor_ln879_75_reg_3428 <= xor_ln879_75_fu_1858_p2;
        xor_ln879_77_reg_3433 <= xor_ln879_77_fu_1870_p2;
        xor_ln879_89_reg_3443 <= xor_ln879_89_fu_2058_p2;
        xor_ln879_91_reg_3448 <= xor_ln879_91_fu_2070_p2;
        xor_ln879_93_reg_3453 <= xor_ln879_93_fu_2082_p2;
        xor_ln879_9_reg_3343 <= xor_ln879_9_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_473_p2 == 1'd1) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        inputBuf_7_V_1_fu_272 <= inputBuf_7_V_17_fu_747_p3;
        inputBuf_7_V_2_fu_276 <= inputBuf_7_V_16_fu_739_p3;
        inputBuf_7_V_3_fu_292 <= inputBuf_7_V_11_fu_667_p3;
        inputBuf_7_V_4_fu_280 <= inputBuf_7_V_14_fu_723_p3;
        inputBuf_7_V_5_fu_288 <= inputBuf_7_V_12_fu_683_p3;
        inputBuf_7_V_6_fu_284 <= inputBuf_7_V_13_fu_707_p3;
        inputBuf_7_V_7_fu_296 <= inputBuf_7_V_10_fu_643_p3;
        inputBuf_7_V_8_fu_300 <= inputBuf_7_V_fu_619_p3;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_458_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_458_p2 == 1'd0)) begin
        if ((icmp_ln252_fu_473_p2 == 1'd0)) begin
            ap_phi_mux_act_m_val_V_phi_fu_441_p4 = inElem_V_fu_510_p10;
        end else if ((icmp_ln252_fu_473_p2 == 1'd1)) begin
            ap_phi_mux_act_m_val_V_phi_fu_441_p4 = in_V_V_TDATA;
        end else begin
            ap_phi_mux_act_m_val_V_phi_fu_441_p4 = ap_phi_reg_pp0_iter0_act_m_val_V_reg_438;
        end
    end else begin
        ap_phi_mux_act_m_val_V_phi_fu_441_p4 = ap_phi_reg_pp0_iter0_act_m_val_V_reg_438;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln252_fu_473_p2 == 1'd1) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op51_read_state2 == 1'b1))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln289_reg_3503 == 1'd1))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_3503 == 1'd1))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_1_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_2_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_3_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_4_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_5_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_6_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_7_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        weight_V_V_TDATA_blk_n = weight_V_V_TVALID;
    end else begin
        weight_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_458_p2 == 1'd0))) begin
        weight_V_V_TREADY = 1'b1;
    end else begin
        weight_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln248_fu_458_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln248_fu_458_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_0_0_V_fu_2731_p2 = (add_ln700_2_fu_2722_p2 + zext_ln700_5_fu_2728_p1);

assign accu_0_1_V_fu_2771_p2 = (add_ln700_10_fu_2762_p2 + zext_ln700_11_fu_2768_p1);

assign accu_0_2_V_fu_2811_p2 = (add_ln700_18_fu_2802_p2 + zext_ln700_17_fu_2808_p1);

assign accu_0_3_V_fu_2851_p2 = (add_ln700_26_fu_2842_p2 + zext_ln700_23_fu_2848_p1);

assign accu_0_4_V_fu_2891_p2 = (add_ln700_34_fu_2882_p2 + zext_ln700_29_fu_2888_p1);

assign accu_0_5_V_fu_2931_p2 = (add_ln700_42_fu_2922_p2 + zext_ln700_35_fu_2928_p1);

assign accu_0_6_V_fu_2971_p2 = (add_ln700_50_fu_2962_p2 + zext_ln700_41_fu_2968_p1);

assign accu_0_7_V_fu_3011_p2 = (add_ln700_58_fu_3002_p2 + zext_ln700_47_fu_3008_p1);

assign add_ln700_10_fu_2762_p2 = (add_ln700_8_fu_2746_p2 + zext_ln700_8_fu_2758_p1);

assign add_ln700_11_fu_1256_p2 = (zext_ln170_6_fu_1152_p1 + zext_ln170_9_fu_1200_p1);

assign add_ln700_12_fu_1266_p2 = (zext_ln700_7_fu_1252_p1 + zext_ln170_7_fu_1168_p1);

assign add_ln700_13_fu_1272_p2 = (zext_ln170_8_fu_1184_p1 + add_ln700_12_fu_1266_p2);

assign add_ln700_14_fu_1282_p2 = (zext_ln700_9_fu_1262_p1 + zext_ln700_10_fu_1278_p1);

assign add_ln700_16_fu_2786_p2 = (zext_ln700_12_fu_2780_p1 + select_ln271_5_fu_2676_p3);

assign add_ln700_17_fu_2792_p2 = (zext_ln170_16_fu_2777_p1 + zext_ln170_17_fu_2783_p1);

assign add_ln700_18_fu_2802_p2 = (add_ln700_16_fu_2786_p2 + zext_ln700_14_fu_2798_p1);

assign add_ln700_19_fu_1468_p2 = (zext_ln170_12_fu_1364_p1 + zext_ln170_15_fu_1412_p1);

assign add_ln700_1_fu_2712_p2 = (zext_ln170_4_fu_2697_p1 + zext_ln170_5_fu_2703_p1);

assign add_ln700_20_fu_1478_p2 = (zext_ln700_13_fu_1464_p1 + zext_ln170_13_fu_1380_p1);

assign add_ln700_21_fu_1484_p2 = (zext_ln170_14_fu_1396_p1 + add_ln700_20_fu_1478_p2);

assign add_ln700_22_fu_1494_p2 = (zext_ln700_15_fu_1474_p1 + zext_ln700_16_fu_1490_p1);

assign add_ln700_24_fu_2826_p2 = (zext_ln700_18_fu_2820_p1 + select_ln271_4_fu_2669_p3);

assign add_ln700_25_fu_2832_p2 = (zext_ln170_22_fu_2817_p1 + zext_ln170_23_fu_2823_p1);

assign add_ln700_26_fu_2842_p2 = (add_ln700_24_fu_2826_p2 + zext_ln700_20_fu_2838_p1);

assign add_ln700_27_fu_1680_p2 = (zext_ln170_18_fu_1576_p1 + zext_ln170_21_fu_1624_p1);

assign add_ln700_28_fu_1690_p2 = (zext_ln700_19_fu_1676_p1 + zext_ln170_19_fu_1592_p1);

assign add_ln700_29_fu_1696_p2 = (zext_ln170_20_fu_1608_p1 + add_ln700_28_fu_1690_p2);

assign add_ln700_2_fu_2722_p2 = (add_ln700_fu_2706_p2 + zext_ln700_2_fu_2718_p1);

assign add_ln700_30_fu_1706_p2 = (zext_ln700_21_fu_1686_p1 + zext_ln700_22_fu_1702_p1);

assign add_ln700_32_fu_2866_p2 = (zext_ln700_24_fu_2860_p1 + select_ln271_3_fu_2662_p3);

assign add_ln700_33_fu_2872_p2 = (zext_ln170_28_fu_2857_p1 + zext_ln170_29_fu_2863_p1);

assign add_ln700_34_fu_2882_p2 = (add_ln700_32_fu_2866_p2 + zext_ln700_26_fu_2878_p1);

assign add_ln700_35_fu_1892_p2 = (zext_ln170_24_fu_1788_p1 + zext_ln170_27_fu_1836_p1);

assign add_ln700_36_fu_1902_p2 = (zext_ln700_25_fu_1888_p1 + zext_ln170_25_fu_1804_p1);

assign add_ln700_37_fu_1908_p2 = (zext_ln170_26_fu_1820_p1 + add_ln700_36_fu_1902_p2);

assign add_ln700_38_fu_1918_p2 = (zext_ln700_27_fu_1898_p1 + zext_ln700_28_fu_1914_p1);

assign add_ln700_3_fu_1044_p2 = (zext_ln170_fu_884_p1 + zext_ln170_3_fu_956_p1);

assign add_ln700_40_fu_2906_p2 = (zext_ln700_30_fu_2900_p1 + select_ln271_2_fu_2655_p3);

assign add_ln700_41_fu_2912_p2 = (zext_ln170_34_fu_2897_p1 + zext_ln170_35_fu_2903_p1);

assign add_ln700_42_fu_2922_p2 = (add_ln700_40_fu_2906_p2 + zext_ln700_32_fu_2918_p1);

assign add_ln700_43_fu_2104_p2 = (zext_ln170_30_fu_2000_p1 + zext_ln170_33_fu_2048_p1);

assign add_ln700_44_fu_2114_p2 = (zext_ln700_31_fu_2100_p1 + zext_ln170_31_fu_2016_p1);

assign add_ln700_45_fu_2120_p2 = (zext_ln170_32_fu_2032_p1 + add_ln700_44_fu_2114_p2);

assign add_ln700_46_fu_2130_p2 = (zext_ln700_33_fu_2110_p1 + zext_ln700_34_fu_2126_p1);

assign add_ln700_48_fu_2946_p2 = (zext_ln700_36_fu_2940_p1 + select_ln271_1_fu_2648_p3);

assign add_ln700_49_fu_2952_p2 = (zext_ln170_40_fu_2937_p1 + zext_ln170_41_fu_2943_p1);

assign add_ln700_4_fu_1054_p2 = (zext_ln700_1_fu_1040_p1 + zext_ln170_1_fu_908_p1);

assign add_ln700_50_fu_2962_p2 = (add_ln700_48_fu_2946_p2 + zext_ln700_38_fu_2958_p1);

assign add_ln700_51_fu_2316_p2 = (zext_ln170_36_fu_2212_p1 + zext_ln170_39_fu_2260_p1);

assign add_ln700_52_fu_2326_p2 = (zext_ln700_37_fu_2312_p1 + zext_ln170_37_fu_2228_p1);

assign add_ln700_53_fu_2332_p2 = (zext_ln170_38_fu_2244_p1 + add_ln700_52_fu_2326_p2);

assign add_ln700_54_fu_2342_p2 = (zext_ln700_39_fu_2322_p1 + zext_ln700_40_fu_2338_p1);

assign add_ln700_56_fu_2986_p2 = (zext_ln700_42_fu_2980_p1 + select_ln271_fu_2641_p3);

assign add_ln700_57_fu_2992_p2 = (zext_ln170_46_fu_2977_p1 + zext_ln170_47_fu_2983_p1);

assign add_ln700_58_fu_3002_p2 = (add_ln700_56_fu_2986_p2 + zext_ln700_44_fu_2998_p1);

assign add_ln700_59_fu_2528_p2 = (zext_ln170_42_fu_2424_p1 + zext_ln170_45_fu_2472_p1);

assign add_ln700_5_fu_1060_p2 = (zext_ln170_2_fu_932_p1 + add_ln700_4_fu_1054_p2);

assign add_ln700_60_fu_2538_p2 = (zext_ln700_43_fu_2524_p1 + zext_ln170_43_fu_2440_p1);

assign add_ln700_61_fu_2544_p2 = (zext_ln170_44_fu_2456_p1 + add_ln700_60_fu_2538_p2);

assign add_ln700_62_fu_2554_p2 = (zext_ln700_45_fu_2534_p1 + zext_ln700_46_fu_2550_p1);

assign add_ln700_6_fu_1070_p2 = (zext_ln700_3_fu_1050_p1 + zext_ln700_4_fu_1066_p1);

assign add_ln700_8_fu_2746_p2 = (zext_ln700_6_fu_2740_p1 + select_ln271_6_fu_2683_p3);

assign add_ln700_9_fu_2752_p2 = (zext_ln170_10_fu_2737_p1 + zext_ln170_11_fu_2743_p1);

assign add_ln700_fu_2706_p2 = (zext_ln700_fu_2700_p1 + select_ln271_7_fu_2690_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_458_p2 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_458_p2 == 1'd0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_458_p2 == 1'd0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_458_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_io = ((out_V_V_TREADY == 1'b0) & (icmp_ln289_reg_3503 == 1'd1));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_438 = 'bx;

always @ (*) begin
    ap_predicate_op51_read_state2 = ((icmp_ln252_fu_473_p2 == 1'd1) & (icmp_ln248_fu_458_p2 == 1'd0));
end

assign i_fu_464_p2 = (i_0_reg_427 + 7'd1);

assign icmp_ln248_fu_458_p2 = ((i_0_reg_427 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_473_p2 = ((nf_assign_fu_268 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_798_p2 = ((sf_1_fu_264 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_2566_p2 = ((sf_fu_2560_p2 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_2598_p2 = ((nf_fu_2592_p2 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_543_p2 = ((trunc_ln321_fu_533_p1 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_549_p2 = ((trunc_ln321_fu_533_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_555_p2 = ((trunc_ln321_fu_533_p1 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_561_p2 = ((trunc_ln321_fu_533_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_567_p2 = ((trunc_ln321_fu_533_p1 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_6_fu_573_p2 = ((trunc_ln321_fu_533_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_537_p2 = ((trunc_ln321_fu_533_p1 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_3077_p2 = ((accu_0_1_V_fu_2771_p2 < zext_ln186_2_fu_3073_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_3093_p2 = ((accu_0_2_V_fu_2811_p2 < zext_ln186_3_fu_3089_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_3_fu_3109_p2 = ((accu_0_3_V_fu_2851_p2 < zext_ln186_4_fu_3105_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_4_fu_3125_p2 = ((accu_0_4_V_fu_2891_p2 < zext_ln186_5_fu_3121_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_5_fu_3141_p2 = ((accu_0_5_V_fu_2931_p2 < zext_ln186_6_fu_3137_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_6_fu_3157_p2 = ((accu_0_6_V_fu_2971_p2 < zext_ln186_7_fu_3153_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_7_fu_3173_p2 = ((accu_0_7_V_fu_3011_p2 < zext_ln186_8_fu_3169_p1) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_3061_p2 = ((accu_0_0_V_fu_2731_p2 < zext_ln186_1_fu_3057_p1) ? 1'b1 : 1'b0);

assign inElem_V_fu_510_p9 = sf_1_fu_264[2:0];

assign inputBuf_7_V_10_fu_643_p3 = ((or_ln321_3_fu_605_p2[0:0] === 1'b1) ? inputBuf_7_V_7_fu_296 : select_ln321_4_fu_635_p3);

assign inputBuf_7_V_11_fu_667_p3 = ((or_ln321_3_fu_605_p2[0:0] === 1'b1) ? inputBuf_7_V_3_fu_292 : select_ln321_7_fu_659_p3);

assign inputBuf_7_V_12_fu_683_p3 = ((or_ln321_3_fu_605_p2[0:0] === 1'b1) ? inputBuf_7_V_5_fu_288 : select_ln321_9_fu_675_p3);

assign inputBuf_7_V_13_fu_707_p3 = ((or_ln321_3_fu_605_p2[0:0] === 1'b1) ? select_ln321_12_fu_699_p3 : inputBuf_7_V_6_fu_284);

assign inputBuf_7_V_14_fu_723_p3 = ((or_ln321_fu_579_p2[0:0] === 1'b1) ? inputBuf_7_V_4_fu_280 : select_ln321_14_fu_715_p3);

assign inputBuf_7_V_15_fu_731_p3 = ((icmp_ln321_5_fu_567_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_2_fu_276);

assign inputBuf_7_V_16_fu_739_p3 = ((icmp_ln321_6_fu_573_p2[0:0] === 1'b1) ? inputBuf_7_V_2_fu_276 : inputBuf_7_V_15_fu_731_p3);

assign inputBuf_7_V_17_fu_747_p3 = ((icmp_ln321_6_fu_573_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_1_fu_272);

assign inputBuf_7_V_fu_619_p3 = ((or_ln321_3_fu_605_p2[0:0] === 1'b1) ? inputBuf_7_V_8_fu_300 : select_ln321_1_fu_611_p3);

assign nf_fu_2592_p2 = (nf_assign_fu_268 + 32'd1);

assign or_ln321_1_fu_585_p2 = (icmp_ln321_4_fu_561_p2 | icmp_ln321_3_fu_555_p2);

assign or_ln321_2_fu_591_p2 = (icmp_ln321_2_fu_549_p2 | icmp_ln321_1_fu_543_p2);

assign or_ln321_3_fu_605_p2 = (or_ln321_fu_579_p2 | or_ln321_1_fu_585_p2);

assign or_ln321_fu_579_p2 = (icmp_ln321_6_fu_573_p2 | icmp_ln321_5_fu_567_p2);

assign out_V_V_TDATA = {{{{{{{{xor_ln899_7_fu_3179_p2}, {xor_ln899_6_fu_3163_p2}}, {xor_ln899_5_fu_3147_p2}}, {xor_ln899_4_fu_3131_p2}}, {xor_ln899_3_fu_3115_p2}}, {xor_ln899_2_fu_3099_p2}}, {xor_ln899_1_fu_3083_p2}}, {xor_ln899_fu_3067_p2}};

assign p_Result_2_0_1_fu_888_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd1];

assign p_Result_2_0_2_fu_912_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd2];

assign p_Result_2_0_3_fu_936_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd3];

assign p_Result_2_0_4_fu_960_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd4];

assign p_Result_2_0_5_fu_980_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd5];

assign p_Result_2_0_6_fu_1000_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd6];

assign p_Result_2_0_7_fu_1020_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd7];

assign p_Result_2_fu_864_p3 = ap_phi_mux_act_m_val_V_phi_fu_441_p4[8'd0];

assign select_ln271_1_fu_2648_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_6_0_fu_256);

assign select_ln271_2_fu_2655_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_5_0_fu_252);

assign select_ln271_3_fu_2662_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_4_0_fu_248);

assign select_ln271_4_fu_2669_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_3_0_fu_244);

assign select_ln271_5_fu_2676_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_2_0_fu_240);

assign select_ln271_6_fu_2683_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_1_0_fu_236);

assign select_ln271_7_fu_2690_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_0_0_fu_232);

assign select_ln271_fu_2641_p3 = ((icmp_ln271_reg_3331[0:0] === 1'b1) ? 7'd0 : accu_V_0_7_0_fu_260);

assign select_ln301_fu_2604_p3 = ((icmp_ln301_fu_2598_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_2592_p2);

assign select_ln321_11_fu_691_p3 = ((icmp_ln321_4_fu_561_p2[0:0] === 1'b1) ? inputBuf_7_V_6_fu_284 : in_V_V_TDATA);

assign select_ln321_12_fu_699_p3 = ((or_ln321_fu_579_p2[0:0] === 1'b1) ? inputBuf_7_V_6_fu_284 : select_ln321_11_fu_691_p3);

assign select_ln321_14_fu_715_p3 = ((icmp_ln321_4_fu_561_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_4_fu_280);

assign select_ln321_1_fu_611_p3 = ((or_ln321_2_fu_591_p2[0:0] === 1'b1) ? inputBuf_7_V_8_fu_300 : select_ln321_fu_597_p3);

assign select_ln321_3_fu_627_p3 = ((icmp_ln321_fu_537_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_7_fu_296);

assign select_ln321_4_fu_635_p3 = ((or_ln321_2_fu_591_p2[0:0] === 1'b1) ? inputBuf_7_V_7_fu_296 : select_ln321_3_fu_627_p3);

assign select_ln321_6_fu_651_p3 = ((icmp_ln321_2_fu_549_p2[0:0] === 1'b1) ? inputBuf_7_V_3_fu_292 : in_V_V_TDATA);

assign select_ln321_7_fu_659_p3 = ((or_ln321_2_fu_591_p2[0:0] === 1'b1) ? select_ln321_6_fu_651_p3 : inputBuf_7_V_3_fu_292);

assign select_ln321_9_fu_675_p3 = ((icmp_ln321_2_fu_549_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_7_V_5_fu_288);

assign select_ln321_fu_597_p3 = ((icmp_ln321_fu_537_p2[0:0] === 1'b1) ? inputBuf_7_V_8_fu_300 : in_V_V_TDATA);

assign sf_fu_2560_p2 = (32'd1 + sf_1_fu_264);

assign threshs_m_thresholds_1_address0 = zext_ln186_fu_2580_p1;

assign threshs_m_thresholds_2_address0 = zext_ln186_fu_2580_p1;

assign threshs_m_thresholds_3_address0 = zext_ln186_fu_2580_p1;

assign threshs_m_thresholds_4_address0 = zext_ln186_fu_2580_p1;

assign threshs_m_thresholds_5_address0 = zext_ln186_fu_2580_p1;

assign threshs_m_thresholds_6_address0 = zext_ln186_fu_2580_p1;

assign threshs_m_thresholds_7_address0 = zext_ln186_fu_2580_p1;

assign threshs_m_thresholds_address0 = zext_ln186_fu_2580_p1;

assign tmp_100_fu_1752_p3 = weight_V_V_TDATA[32'd37];

assign tmp_101_fu_1760_p3 = weight_V_V_TDATA[32'd38];

assign tmp_102_fu_1768_p3 = weight_V_V_TDATA[32'd39];

assign tmp_103_fu_1924_p3 = weight_V_V_TDATA[32'd40];

assign tmp_104_fu_1932_p3 = weight_V_V_TDATA[32'd41];

assign tmp_105_fu_1940_p3 = weight_V_V_TDATA[32'd42];

assign tmp_106_fu_1948_p3 = weight_V_V_TDATA[32'd43];

assign tmp_107_fu_1956_p3 = weight_V_V_TDATA[32'd44];

assign tmp_108_fu_1964_p3 = weight_V_V_TDATA[32'd45];

assign tmp_109_fu_1972_p3 = weight_V_V_TDATA[32'd46];

assign tmp_110_fu_1980_p3 = weight_V_V_TDATA[32'd47];

assign tmp_111_fu_2136_p3 = weight_V_V_TDATA[32'd48];

assign tmp_112_fu_2144_p3 = weight_V_V_TDATA[32'd49];

assign tmp_113_fu_2152_p3 = weight_V_V_TDATA[32'd50];

assign tmp_114_fu_2160_p3 = weight_V_V_TDATA[32'd51];

assign tmp_115_fu_2168_p3 = weight_V_V_TDATA[32'd52];

assign tmp_116_fu_2176_p3 = weight_V_V_TDATA[32'd53];

assign tmp_117_fu_2184_p3 = weight_V_V_TDATA[32'd54];

assign tmp_118_fu_2192_p3 = weight_V_V_TDATA[32'd55];

assign tmp_119_fu_2348_p3 = weight_V_V_TDATA[32'd56];

assign tmp_120_fu_2356_p3 = weight_V_V_TDATA[32'd57];

assign tmp_121_fu_2364_p3 = weight_V_V_TDATA[32'd58];

assign tmp_122_fu_2372_p3 = weight_V_V_TDATA[32'd59];

assign tmp_123_fu_2380_p3 = weight_V_V_TDATA[32'd60];

assign tmp_124_fu_2388_p3 = weight_V_V_TDATA[32'd61];

assign tmp_125_fu_2396_p3 = weight_V_V_TDATA[32'd62];

assign tmp_126_fu_2404_p3 = weight_V_V_TDATA[32'd63];

assign tmp_64_fu_808_p3 = weight_V_V_TDATA[32'd1];

assign tmp_65_fu_816_p3 = weight_V_V_TDATA[32'd2];

assign tmp_66_fu_824_p3 = weight_V_V_TDATA[32'd3];

assign tmp_67_fu_832_p3 = weight_V_V_TDATA[32'd4];

assign tmp_68_fu_840_p3 = weight_V_V_TDATA[32'd5];

assign tmp_69_fu_848_p3 = weight_V_V_TDATA[32'd6];

assign tmp_70_fu_856_p3 = weight_V_V_TDATA[32'd7];

assign tmp_71_fu_1076_p3 = weight_V_V_TDATA[32'd8];

assign tmp_72_fu_1084_p3 = weight_V_V_TDATA[32'd9];

assign tmp_73_fu_1092_p3 = weight_V_V_TDATA[32'd10];

assign tmp_74_fu_1100_p3 = weight_V_V_TDATA[32'd11];

assign tmp_75_fu_1108_p3 = weight_V_V_TDATA[32'd12];

assign tmp_76_fu_1116_p3 = weight_V_V_TDATA[32'd13];

assign tmp_77_fu_1124_p3 = weight_V_V_TDATA[32'd14];

assign tmp_78_fu_1132_p3 = weight_V_V_TDATA[32'd15];

assign tmp_79_fu_1288_p3 = weight_V_V_TDATA[32'd16];

assign tmp_80_fu_1296_p3 = weight_V_V_TDATA[32'd17];

assign tmp_81_fu_1304_p3 = weight_V_V_TDATA[32'd18];

assign tmp_82_fu_1312_p3 = weight_V_V_TDATA[32'd19];

assign tmp_83_fu_1320_p3 = weight_V_V_TDATA[32'd20];

assign tmp_84_fu_1328_p3 = weight_V_V_TDATA[32'd21];

assign tmp_85_fu_1336_p3 = weight_V_V_TDATA[32'd22];

assign tmp_86_fu_1344_p3 = weight_V_V_TDATA[32'd23];

assign tmp_87_fu_1500_p3 = weight_V_V_TDATA[32'd24];

assign tmp_88_fu_1508_p3 = weight_V_V_TDATA[32'd25];

assign tmp_89_fu_1516_p3 = weight_V_V_TDATA[32'd26];

assign tmp_90_fu_1524_p3 = weight_V_V_TDATA[32'd27];

assign tmp_91_fu_1532_p3 = weight_V_V_TDATA[32'd28];

assign tmp_92_fu_1540_p3 = weight_V_V_TDATA[32'd29];

assign tmp_93_fu_1548_p3 = weight_V_V_TDATA[32'd30];

assign tmp_94_fu_1556_p3 = weight_V_V_TDATA[32'd31];

assign tmp_95_fu_1712_p3 = weight_V_V_TDATA[32'd32];

assign tmp_96_fu_1720_p3 = weight_V_V_TDATA[32'd33];

assign tmp_97_fu_1728_p3 = weight_V_V_TDATA[32'd34];

assign tmp_98_fu_1736_p3 = weight_V_V_TDATA[32'd35];

assign tmp_99_fu_1744_p3 = weight_V_V_TDATA[32'd36];

assign trunc_ln321_fu_533_p1 = sf_1_fu_264[2:0];

assign trunc_ln647_fu_804_p1 = weight_V_V_TDATA[0:0];

assign xor_ln879_100_fu_2232_p2 = (tmp_113_fu_2152_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_101_fu_2238_p2 = (xor_ln879_100_fu_2232_p2 ^ 1'd1);

assign xor_ln879_102_fu_2248_p2 = (tmp_114_fu_2160_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_103_fu_2254_p2 = (xor_ln879_102_fu_2248_p2 ^ 1'd1);

assign xor_ln879_104_fu_2264_p2 = (tmp_115_fu_2168_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_105_fu_2270_p2 = (xor_ln879_104_fu_2264_p2 ^ 1'd1);

assign xor_ln879_106_fu_2276_p2 = (tmp_116_fu_2176_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_107_fu_2282_p2 = (xor_ln879_106_fu_2276_p2 ^ 1'd1);

assign xor_ln879_108_fu_2288_p2 = (tmp_117_fu_2184_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_109_fu_2294_p2 = (xor_ln879_108_fu_2288_p2 ^ 1'd1);

assign xor_ln879_10_fu_988_p2 = (tmp_68_fu_840_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_110_fu_2300_p2 = (tmp_118_fu_2192_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_111_fu_2306_p2 = (xor_ln879_110_fu_2300_p2 ^ 1'd1);

assign xor_ln879_112_fu_2412_p2 = (tmp_119_fu_2348_p3 ^ p_Result_2_fu_864_p3);

assign xor_ln879_113_fu_2418_p2 = (xor_ln879_112_fu_2412_p2 ^ 1'd1);

assign xor_ln879_114_fu_2428_p2 = (tmp_120_fu_2356_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_115_fu_2434_p2 = (xor_ln879_114_fu_2428_p2 ^ 1'd1);

assign xor_ln879_116_fu_2444_p2 = (tmp_121_fu_2364_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_117_fu_2450_p2 = (xor_ln879_116_fu_2444_p2 ^ 1'd1);

assign xor_ln879_118_fu_2460_p2 = (tmp_122_fu_2372_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_119_fu_2466_p2 = (xor_ln879_118_fu_2460_p2 ^ 1'd1);

assign xor_ln879_11_fu_994_p2 = (xor_ln879_10_fu_988_p2 ^ 1'd1);

assign xor_ln879_120_fu_2476_p2 = (tmp_123_fu_2380_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_121_fu_2482_p2 = (xor_ln879_120_fu_2476_p2 ^ 1'd1);

assign xor_ln879_122_fu_2488_p2 = (tmp_124_fu_2388_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_123_fu_2494_p2 = (xor_ln879_122_fu_2488_p2 ^ 1'd1);

assign xor_ln879_124_fu_2500_p2 = (tmp_125_fu_2396_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_125_fu_2506_p2 = (xor_ln879_124_fu_2500_p2 ^ 1'd1);

assign xor_ln879_126_fu_2512_p2 = (tmp_126_fu_2404_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_127_fu_2518_p2 = (xor_ln879_126_fu_2512_p2 ^ 1'd1);

assign xor_ln879_12_fu_1008_p2 = (tmp_69_fu_848_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_13_fu_1014_p2 = (xor_ln879_12_fu_1008_p2 ^ 1'd1);

assign xor_ln879_14_fu_1028_p2 = (tmp_70_fu_856_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_15_fu_1034_p2 = (xor_ln879_14_fu_1028_p2 ^ 1'd1);

assign xor_ln879_16_fu_1140_p2 = (tmp_71_fu_1076_p3 ^ p_Result_2_fu_864_p3);

assign xor_ln879_17_fu_1146_p2 = (xor_ln879_16_fu_1140_p2 ^ 1'd1);

assign xor_ln879_18_fu_1156_p2 = (tmp_72_fu_1084_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_19_fu_1162_p2 = (xor_ln879_18_fu_1156_p2 ^ 1'd1);

assign xor_ln879_1_fu_878_p2 = (xor_ln879_fu_872_p2 ^ 1'd1);

assign xor_ln879_20_fu_1172_p2 = (tmp_73_fu_1092_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_21_fu_1178_p2 = (xor_ln879_20_fu_1172_p2 ^ 1'd1);

assign xor_ln879_22_fu_1188_p2 = (tmp_74_fu_1100_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_23_fu_1194_p2 = (xor_ln879_22_fu_1188_p2 ^ 1'd1);

assign xor_ln879_24_fu_1204_p2 = (tmp_75_fu_1108_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_25_fu_1210_p2 = (xor_ln879_24_fu_1204_p2 ^ 1'd1);

assign xor_ln879_26_fu_1216_p2 = (tmp_76_fu_1116_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_27_fu_1222_p2 = (xor_ln879_26_fu_1216_p2 ^ 1'd1);

assign xor_ln879_28_fu_1228_p2 = (tmp_77_fu_1124_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_29_fu_1234_p2 = (xor_ln879_28_fu_1228_p2 ^ 1'd1);

assign xor_ln879_2_fu_896_p2 = (tmp_64_fu_808_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_30_fu_1240_p2 = (tmp_78_fu_1132_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_31_fu_1246_p2 = (xor_ln879_30_fu_1240_p2 ^ 1'd1);

assign xor_ln879_32_fu_1352_p2 = (tmp_79_fu_1288_p3 ^ p_Result_2_fu_864_p3);

assign xor_ln879_33_fu_1358_p2 = (xor_ln879_32_fu_1352_p2 ^ 1'd1);

assign xor_ln879_34_fu_1368_p2 = (tmp_80_fu_1296_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_35_fu_1374_p2 = (xor_ln879_34_fu_1368_p2 ^ 1'd1);

assign xor_ln879_36_fu_1384_p2 = (tmp_81_fu_1304_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_37_fu_1390_p2 = (xor_ln879_36_fu_1384_p2 ^ 1'd1);

assign xor_ln879_38_fu_1400_p2 = (tmp_82_fu_1312_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_39_fu_1406_p2 = (xor_ln879_38_fu_1400_p2 ^ 1'd1);

assign xor_ln879_3_fu_902_p2 = (xor_ln879_2_fu_896_p2 ^ 1'd1);

assign xor_ln879_40_fu_1416_p2 = (tmp_83_fu_1320_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_41_fu_1422_p2 = (xor_ln879_40_fu_1416_p2 ^ 1'd1);

assign xor_ln879_42_fu_1428_p2 = (tmp_84_fu_1328_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_43_fu_1434_p2 = (xor_ln879_42_fu_1428_p2 ^ 1'd1);

assign xor_ln879_44_fu_1440_p2 = (tmp_85_fu_1336_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_45_fu_1446_p2 = (xor_ln879_44_fu_1440_p2 ^ 1'd1);

assign xor_ln879_46_fu_1452_p2 = (tmp_86_fu_1344_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_47_fu_1458_p2 = (xor_ln879_46_fu_1452_p2 ^ 1'd1);

assign xor_ln879_48_fu_1564_p2 = (tmp_87_fu_1500_p3 ^ p_Result_2_fu_864_p3);

assign xor_ln879_49_fu_1570_p2 = (xor_ln879_48_fu_1564_p2 ^ 1'd1);

assign xor_ln879_4_fu_920_p2 = (tmp_65_fu_816_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_50_fu_1580_p2 = (tmp_88_fu_1508_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_51_fu_1586_p2 = (xor_ln879_50_fu_1580_p2 ^ 1'd1);

assign xor_ln879_52_fu_1596_p2 = (tmp_89_fu_1516_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_53_fu_1602_p2 = (xor_ln879_52_fu_1596_p2 ^ 1'd1);

assign xor_ln879_54_fu_1612_p2 = (tmp_90_fu_1524_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_55_fu_1618_p2 = (xor_ln879_54_fu_1612_p2 ^ 1'd1);

assign xor_ln879_56_fu_1628_p2 = (tmp_91_fu_1532_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_57_fu_1634_p2 = (xor_ln879_56_fu_1628_p2 ^ 1'd1);

assign xor_ln879_58_fu_1640_p2 = (tmp_92_fu_1540_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_59_fu_1646_p2 = (xor_ln879_58_fu_1640_p2 ^ 1'd1);

assign xor_ln879_5_fu_926_p2 = (xor_ln879_4_fu_920_p2 ^ 1'd1);

assign xor_ln879_60_fu_1652_p2 = (tmp_93_fu_1548_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_61_fu_1658_p2 = (xor_ln879_60_fu_1652_p2 ^ 1'd1);

assign xor_ln879_62_fu_1664_p2 = (tmp_94_fu_1556_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_63_fu_1670_p2 = (xor_ln879_62_fu_1664_p2 ^ 1'd1);

assign xor_ln879_64_fu_1776_p2 = (tmp_95_fu_1712_p3 ^ p_Result_2_fu_864_p3);

assign xor_ln879_65_fu_1782_p2 = (xor_ln879_64_fu_1776_p2 ^ 1'd1);

assign xor_ln879_66_fu_1792_p2 = (tmp_96_fu_1720_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_67_fu_1798_p2 = (xor_ln879_66_fu_1792_p2 ^ 1'd1);

assign xor_ln879_68_fu_1808_p2 = (tmp_97_fu_1728_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_69_fu_1814_p2 = (xor_ln879_68_fu_1808_p2 ^ 1'd1);

assign xor_ln879_6_fu_944_p2 = (tmp_66_fu_824_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_70_fu_1824_p2 = (tmp_98_fu_1736_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_71_fu_1830_p2 = (xor_ln879_70_fu_1824_p2 ^ 1'd1);

assign xor_ln879_72_fu_1840_p2 = (tmp_99_fu_1744_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_73_fu_1846_p2 = (xor_ln879_72_fu_1840_p2 ^ 1'd1);

assign xor_ln879_74_fu_1852_p2 = (tmp_100_fu_1752_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_75_fu_1858_p2 = (xor_ln879_74_fu_1852_p2 ^ 1'd1);

assign xor_ln879_76_fu_1864_p2 = (tmp_101_fu_1760_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_77_fu_1870_p2 = (xor_ln879_76_fu_1864_p2 ^ 1'd1);

assign xor_ln879_78_fu_1876_p2 = (tmp_102_fu_1768_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_79_fu_1882_p2 = (xor_ln879_78_fu_1876_p2 ^ 1'd1);

assign xor_ln879_7_fu_950_p2 = (xor_ln879_6_fu_944_p2 ^ 1'd1);

assign xor_ln879_80_fu_1988_p2 = (tmp_103_fu_1924_p3 ^ p_Result_2_fu_864_p3);

assign xor_ln879_81_fu_1994_p2 = (xor_ln879_80_fu_1988_p2 ^ 1'd1);

assign xor_ln879_82_fu_2004_p2 = (tmp_104_fu_1932_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_83_fu_2010_p2 = (xor_ln879_82_fu_2004_p2 ^ 1'd1);

assign xor_ln879_84_fu_2020_p2 = (tmp_105_fu_1940_p3 ^ p_Result_2_0_2_fu_912_p3);

assign xor_ln879_85_fu_2026_p2 = (xor_ln879_84_fu_2020_p2 ^ 1'd1);

assign xor_ln879_86_fu_2036_p2 = (tmp_106_fu_1948_p3 ^ p_Result_2_0_3_fu_936_p3);

assign xor_ln879_87_fu_2042_p2 = (xor_ln879_86_fu_2036_p2 ^ 1'd1);

assign xor_ln879_88_fu_2052_p2 = (tmp_107_fu_1956_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_89_fu_2058_p2 = (xor_ln879_88_fu_2052_p2 ^ 1'd1);

assign xor_ln879_8_fu_968_p2 = (tmp_67_fu_832_p3 ^ p_Result_2_0_4_fu_960_p3);

assign xor_ln879_90_fu_2064_p2 = (tmp_108_fu_1964_p3 ^ p_Result_2_0_5_fu_980_p3);

assign xor_ln879_91_fu_2070_p2 = (xor_ln879_90_fu_2064_p2 ^ 1'd1);

assign xor_ln879_92_fu_2076_p2 = (tmp_109_fu_1972_p3 ^ p_Result_2_0_6_fu_1000_p3);

assign xor_ln879_93_fu_2082_p2 = (xor_ln879_92_fu_2076_p2 ^ 1'd1);

assign xor_ln879_94_fu_2088_p2 = (tmp_110_fu_1980_p3 ^ p_Result_2_0_7_fu_1020_p3);

assign xor_ln879_95_fu_2094_p2 = (xor_ln879_94_fu_2088_p2 ^ 1'd1);

assign xor_ln879_96_fu_2200_p2 = (tmp_111_fu_2136_p3 ^ p_Result_2_fu_864_p3);

assign xor_ln879_97_fu_2206_p2 = (xor_ln879_96_fu_2200_p2 ^ 1'd1);

assign xor_ln879_98_fu_2216_p2 = (tmp_112_fu_2144_p3 ^ p_Result_2_0_1_fu_888_p3);

assign xor_ln879_99_fu_2222_p2 = (xor_ln879_98_fu_2216_p2 ^ 1'd1);

assign xor_ln879_9_fu_974_p2 = (xor_ln879_8_fu_968_p2 ^ 1'd1);

assign xor_ln879_fu_872_p2 = (trunc_ln647_fu_804_p1 ^ p_Result_2_fu_864_p3);

assign xor_ln899_1_fu_3083_p2 = (icmp_ln899_1_fu_3077_p2 ^ 1'd1);

assign xor_ln899_2_fu_3099_p2 = (icmp_ln899_2_fu_3093_p2 ^ 1'd1);

assign xor_ln899_3_fu_3115_p2 = (icmp_ln899_3_fu_3109_p2 ^ 1'd1);

assign xor_ln899_4_fu_3131_p2 = (icmp_ln899_4_fu_3125_p2 ^ 1'd1);

assign xor_ln899_5_fu_3147_p2 = (icmp_ln899_5_fu_3141_p2 ^ 1'd1);

assign xor_ln899_6_fu_3163_p2 = (icmp_ln899_6_fu_3157_p2 ^ 1'd1);

assign xor_ln899_7_fu_3179_p2 = (icmp_ln899_7_fu_3173_p2 ^ 1'd1);

assign xor_ln899_fu_3067_p2 = (icmp_ln899_fu_3061_p2 ^ 1'd1);

assign zext_ln170_10_fu_2737_p1 = xor_ln879_25_reg_3363;

assign zext_ln170_11_fu_2743_p1 = xor_ln879_29_reg_3373;

assign zext_ln170_12_fu_1364_p1 = xor_ln879_33_fu_1358_p2;

assign zext_ln170_13_fu_1380_p1 = xor_ln879_35_fu_1374_p2;

assign zext_ln170_14_fu_1396_p1 = xor_ln879_37_fu_1390_p2;

assign zext_ln170_15_fu_1412_p1 = xor_ln879_39_fu_1406_p2;

assign zext_ln170_16_fu_2777_p1 = xor_ln879_41_reg_3383;

assign zext_ln170_17_fu_2783_p1 = xor_ln879_45_reg_3393;

assign zext_ln170_18_fu_1576_p1 = xor_ln879_49_fu_1570_p2;

assign zext_ln170_19_fu_1592_p1 = xor_ln879_51_fu_1586_p2;

assign zext_ln170_1_fu_908_p1 = xor_ln879_3_fu_902_p2;

assign zext_ln170_20_fu_1608_p1 = xor_ln879_53_fu_1602_p2;

assign zext_ln170_21_fu_1624_p1 = xor_ln879_55_fu_1618_p2;

assign zext_ln170_22_fu_2817_p1 = xor_ln879_57_reg_3403;

assign zext_ln170_23_fu_2823_p1 = xor_ln879_61_reg_3413;

assign zext_ln170_24_fu_1788_p1 = xor_ln879_65_fu_1782_p2;

assign zext_ln170_25_fu_1804_p1 = xor_ln879_67_fu_1798_p2;

assign zext_ln170_26_fu_1820_p1 = xor_ln879_69_fu_1814_p2;

assign zext_ln170_27_fu_1836_p1 = xor_ln879_71_fu_1830_p2;

assign zext_ln170_28_fu_2857_p1 = xor_ln879_73_reg_3423;

assign zext_ln170_29_fu_2863_p1 = xor_ln879_77_reg_3433;

assign zext_ln170_2_fu_932_p1 = xor_ln879_5_fu_926_p2;

assign zext_ln170_30_fu_2000_p1 = xor_ln879_81_fu_1994_p2;

assign zext_ln170_31_fu_2016_p1 = xor_ln879_83_fu_2010_p2;

assign zext_ln170_32_fu_2032_p1 = xor_ln879_85_fu_2026_p2;

assign zext_ln170_33_fu_2048_p1 = xor_ln879_87_fu_2042_p2;

assign zext_ln170_34_fu_2897_p1 = xor_ln879_89_reg_3443;

assign zext_ln170_35_fu_2903_p1 = xor_ln879_93_reg_3453;

assign zext_ln170_36_fu_2212_p1 = xor_ln879_97_fu_2206_p2;

assign zext_ln170_37_fu_2228_p1 = xor_ln879_99_fu_2222_p2;

assign zext_ln170_38_fu_2244_p1 = xor_ln879_101_fu_2238_p2;

assign zext_ln170_39_fu_2260_p1 = xor_ln879_103_fu_2254_p2;

assign zext_ln170_3_fu_956_p1 = xor_ln879_7_fu_950_p2;

assign zext_ln170_40_fu_2937_p1 = xor_ln879_105_reg_3463;

assign zext_ln170_41_fu_2943_p1 = xor_ln879_109_reg_3473;

assign zext_ln170_42_fu_2424_p1 = xor_ln879_113_fu_2418_p2;

assign zext_ln170_43_fu_2440_p1 = xor_ln879_115_fu_2434_p2;

assign zext_ln170_44_fu_2456_p1 = xor_ln879_117_fu_2450_p2;

assign zext_ln170_45_fu_2472_p1 = xor_ln879_119_fu_2466_p2;

assign zext_ln170_46_fu_2977_p1 = xor_ln879_121_reg_3483;

assign zext_ln170_47_fu_2983_p1 = xor_ln879_125_reg_3493;

assign zext_ln170_4_fu_2697_p1 = xor_ln879_9_reg_3343;

assign zext_ln170_5_fu_2703_p1 = xor_ln879_13_reg_3353;

assign zext_ln170_6_fu_1152_p1 = xor_ln879_17_fu_1146_p2;

assign zext_ln170_7_fu_1168_p1 = xor_ln879_19_fu_1162_p2;

assign zext_ln170_8_fu_1184_p1 = xor_ln879_21_fu_1178_p2;

assign zext_ln170_9_fu_1200_p1 = xor_ln879_23_fu_1194_p2;

assign zext_ln170_fu_884_p1 = xor_ln879_1_fu_878_p2;

assign zext_ln186_1_fu_3057_p1 = threshs_m_thresholds_7_q0;

assign zext_ln186_2_fu_3073_p1 = threshs_m_thresholds_6_q0;

assign zext_ln186_3_fu_3089_p1 = threshs_m_thresholds_5_q0;

assign zext_ln186_4_fu_3105_p1 = threshs_m_thresholds_4_q0;

assign zext_ln186_5_fu_3121_p1 = threshs_m_thresholds_3_q0;

assign zext_ln186_6_fu_3137_p1 = threshs_m_thresholds_2_q0;

assign zext_ln186_7_fu_3153_p1 = threshs_m_thresholds_1_q0;

assign zext_ln186_8_fu_3169_p1 = threshs_m_thresholds_q0;

assign zext_ln186_fu_2580_p1 = nf_assign_fu_268;

assign zext_ln700_10_fu_1278_p1 = add_ln700_13_fu_1272_p2;

assign zext_ln700_11_fu_2768_p1 = add_ln700_14_reg_3378;

assign zext_ln700_12_fu_2780_p1 = xor_ln879_43_reg_3388;

assign zext_ln700_13_fu_1464_p1 = xor_ln879_47_fu_1458_p2;

assign zext_ln700_14_fu_2798_p1 = add_ln700_17_fu_2792_p2;

assign zext_ln700_15_fu_1474_p1 = add_ln700_19_fu_1468_p2;

assign zext_ln700_16_fu_1490_p1 = add_ln700_21_fu_1484_p2;

assign zext_ln700_17_fu_2808_p1 = add_ln700_22_reg_3398;

assign zext_ln700_18_fu_2820_p1 = xor_ln879_59_reg_3408;

assign zext_ln700_19_fu_1676_p1 = xor_ln879_63_fu_1670_p2;

assign zext_ln700_1_fu_1040_p1 = xor_ln879_15_fu_1034_p2;

assign zext_ln700_20_fu_2838_p1 = add_ln700_25_fu_2832_p2;

assign zext_ln700_21_fu_1686_p1 = add_ln700_27_fu_1680_p2;

assign zext_ln700_22_fu_1702_p1 = add_ln700_29_fu_1696_p2;

assign zext_ln700_23_fu_2848_p1 = add_ln700_30_reg_3418;

assign zext_ln700_24_fu_2860_p1 = xor_ln879_75_reg_3428;

assign zext_ln700_25_fu_1888_p1 = xor_ln879_79_fu_1882_p2;

assign zext_ln700_26_fu_2878_p1 = add_ln700_33_fu_2872_p2;

assign zext_ln700_27_fu_1898_p1 = add_ln700_35_fu_1892_p2;

assign zext_ln700_28_fu_1914_p1 = add_ln700_37_fu_1908_p2;

assign zext_ln700_29_fu_2888_p1 = add_ln700_38_reg_3438;

assign zext_ln700_2_fu_2718_p1 = add_ln700_1_fu_2712_p2;

assign zext_ln700_30_fu_2900_p1 = xor_ln879_91_reg_3448;

assign zext_ln700_31_fu_2100_p1 = xor_ln879_95_fu_2094_p2;

assign zext_ln700_32_fu_2918_p1 = add_ln700_41_fu_2912_p2;

assign zext_ln700_33_fu_2110_p1 = add_ln700_43_fu_2104_p2;

assign zext_ln700_34_fu_2126_p1 = add_ln700_45_fu_2120_p2;

assign zext_ln700_35_fu_2928_p1 = add_ln700_46_reg_3458;

assign zext_ln700_36_fu_2940_p1 = xor_ln879_107_reg_3468;

assign zext_ln700_37_fu_2312_p1 = xor_ln879_111_fu_2306_p2;

assign zext_ln700_38_fu_2958_p1 = add_ln700_49_fu_2952_p2;

assign zext_ln700_39_fu_2322_p1 = add_ln700_51_fu_2316_p2;

assign zext_ln700_3_fu_1050_p1 = add_ln700_3_fu_1044_p2;

assign zext_ln700_40_fu_2338_p1 = add_ln700_53_fu_2332_p2;

assign zext_ln700_41_fu_2968_p1 = add_ln700_54_reg_3478;

assign zext_ln700_42_fu_2980_p1 = xor_ln879_123_reg_3488;

assign zext_ln700_43_fu_2524_p1 = xor_ln879_127_fu_2518_p2;

assign zext_ln700_44_fu_2998_p1 = add_ln700_57_fu_2992_p2;

assign zext_ln700_45_fu_2534_p1 = add_ln700_59_fu_2528_p2;

assign zext_ln700_46_fu_2550_p1 = add_ln700_61_fu_2544_p2;

assign zext_ln700_47_fu_3008_p1 = add_ln700_62_reg_3498;

assign zext_ln700_4_fu_1066_p1 = add_ln700_5_fu_1060_p2;

assign zext_ln700_5_fu_2728_p1 = add_ln700_6_reg_3358;

assign zext_ln700_6_fu_2740_p1 = xor_ln879_27_reg_3368;

assign zext_ln700_7_fu_1252_p1 = xor_ln879_31_fu_1246_p2;

assign zext_ln700_8_fu_2758_p1 = add_ln700_9_fu_2752_p2;

assign zext_ln700_9_fu_1262_p1 = add_ln700_11_fu_1256_p2;

assign zext_ln700_fu_2700_p1 = xor_ln879_11_reg_3348;

endmodule //StreamingFCLayer_Batch_1_Matrix_Vector_Activa
