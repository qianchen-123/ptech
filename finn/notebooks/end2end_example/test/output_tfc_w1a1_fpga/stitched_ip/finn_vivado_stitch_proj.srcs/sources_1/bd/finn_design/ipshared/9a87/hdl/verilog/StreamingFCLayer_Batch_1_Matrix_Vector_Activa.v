// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_1_Matrix_Vector_Activa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        weight_V_V_TDATA,
        weight_V_V_TVALID,
        weight_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [7:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
input  [47:0] weight_V_V_TDATA;
input   weight_V_V_TVALID;
output   weight_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;
reg weight_V_V_TREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] threshs_m_thresholds_14_address0;
reg    threshs_m_thresholds_14_ce0;
wire   [6:0] threshs_m_thresholds_14_q0;
wire   [3:0] threshs_m_thresholds_13_address0;
reg    threshs_m_thresholds_13_ce0;
wire   [6:0] threshs_m_thresholds_13_q0;
wire   [3:0] threshs_m_thresholds_7_address0;
reg    threshs_m_thresholds_7_ce0;
wire   [7:0] threshs_m_thresholds_7_q0;
wire   [3:0] threshs_m_thresholds_6_address0;
reg    threshs_m_thresholds_6_ce0;
wire   [7:0] threshs_m_thresholds_6_q0;
wire   [3:0] threshs_m_thresholds_5_address0;
reg    threshs_m_thresholds_5_ce0;
wire   [7:0] threshs_m_thresholds_5_q0;
wire   [3:0] threshs_m_thresholds_4_address0;
reg    threshs_m_thresholds_4_ce0;
wire   [7:0] threshs_m_thresholds_4_q0;
wire   [3:0] threshs_m_thresholds_3_address0;
reg    threshs_m_thresholds_3_ce0;
wire   [8:0] threshs_m_thresholds_3_q0;
wire   [3:0] threshs_m_thresholds_2_address0;
reg    threshs_m_thresholds_2_ce0;
wire   [8:0] threshs_m_thresholds_2_q0;
wire   [3:0] threshs_m_thresholds_1_address0;
reg    threshs_m_thresholds_1_ce0;
wire   [8:0] threshs_m_thresholds_1_q0;
wire   [3:0] threshs_m_thresholds_address0;
reg    threshs_m_thresholds_ce0;
wire   [8:0] threshs_m_thresholds_q0;
wire   [3:0] threshs_m_thresholds_12_address0;
reg    threshs_m_thresholds_12_ce0;
wire   [8:0] threshs_m_thresholds_12_q0;
wire   [3:0] threshs_m_thresholds_11_address0;
reg    threshs_m_thresholds_11_ce0;
wire   [8:0] threshs_m_thresholds_11_q0;
wire   [3:0] threshs_m_thresholds_10_address0;
reg    threshs_m_thresholds_10_ce0;
wire   [7:0] threshs_m_thresholds_10_q0;
wire   [3:0] threshs_m_thresholds_9_address0;
reg    threshs_m_thresholds_9_ce0;
wire   [9:0] threshs_m_thresholds_9_q0;
wire   [3:0] threshs_m_thresholds_8_address0;
reg    threshs_m_thresholds_8_ce0;
wire   [9:0] threshs_m_thresholds_8_q0;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln248_fu_492_p2;
wire   [0:0] icmp_ln252_fu_507_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln289_reg_2237;
reg    weight_V_V_TDATA_blk_n;
reg   [13:0] i_0_reg_462;
reg    ap_predicate_op48_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [13:0] i_fu_498_p2;
wire   [13:0] add_ln700_14_fu_1630_p2;
reg   [13:0] add_ln700_14_reg_2218;
wire   [0:0] icmp_ln289_fu_1642_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [59:0] ap_phi_mux_act_m_val_V_phi_fu_476_p4;
wire   [59:0] tmp_V_2_fu_577_p1;
wire   [59:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_473;
wire   [59:0] inElem_V_22_fu_550_p12;
wire   [63:0] zext_ln186_fu_1661_p1;
reg   [13:0] accu_V_0_0_0_fu_196;
reg   [31:0] sf_1_fu_200;
wire   [31:0] sf_fu_1636_p2;
reg   [31:0] nf_assign_fu_204;
wire   [31:0] nf_1_fu_1692_p3;
reg   [59:0] inElem_V_1_fu_208;
wire   [59:0] inElem_V_21_fu_866_p3;
reg   [59:0] inElem_V_3_fu_212;
wire   [59:0] inElem_V_20_fu_858_p3;
reg   [59:0] inElem_V_5_fu_216;
wire   [59:0] inElem_V_18_fu_842_p3;
reg   [59:0] inElem_V_7_fu_220;
wire   [59:0] inElem_V_17_fu_826_p3;
reg   [59:0] inElem_V_8_fu_224;
wire   [59:0] inElem_V_16_fu_802_p3;
reg   [59:0] inElem_V_6_fu_228;
wire   [59:0] inElem_V_15_fu_786_p3;
reg   [59:0] inElem_V_4_fu_232;
wire   [59:0] inElem_V_14_fu_762_p3;
reg   [59:0] inElem_V_2_fu_236;
wire   [59:0] inElem_V_13_fu_738_p3;
reg   [59:0] inElem_V_9_fu_240;
wire   [59:0] inElem_V_12_fu_706_p3;
reg   [59:0] inElem_V_10_fu_244;
wire   [59:0] inElem_V_fu_690_p3;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] inElem_V_22_fu_550_p11;
wire   [3:0] trunc_ln321_fu_582_p1;
wire   [0:0] icmp_ln321_8_fu_634_p2;
wire   [0:0] icmp_ln321_7_fu_628_p2;
wire   [0:0] icmp_ln321_6_fu_622_p2;
wire   [0:0] icmp_ln321_5_fu_616_p2;
wire   [0:0] icmp_ln321_4_fu_610_p2;
wire   [0:0] icmp_ln321_3_fu_604_p2;
wire   [0:0] icmp_ln321_2_fu_598_p2;
wire   [0:0] icmp_ln321_1_fu_592_p2;
wire   [0:0] icmp_ln321_fu_586_p2;
wire   [0:0] or_ln321_fu_640_p2;
wire   [0:0] or_ln321_1_fu_646_p2;
wire   [0:0] or_ln321_2_fu_652_p2;
wire   [0:0] or_ln321_3_fu_658_p2;
wire   [0:0] or_ln321_4_fu_672_p2;
wire   [0:0] or_ln321_5_fu_678_p2;
wire   [0:0] or_ln321_6_fu_684_p2;
wire   [59:0] select_ln321_fu_664_p3;
wire   [59:0] select_ln321_2_fu_698_p3;
wire   [59:0] select_ln321_4_fu_714_p3;
wire   [59:0] select_ln321_5_fu_722_p3;
wire   [59:0] select_ln321_6_fu_730_p3;
wire   [59:0] select_ln321_8_fu_746_p3;
wire   [59:0] select_ln321_9_fu_754_p3;
wire   [59:0] select_ln321_11_fu_770_p3;
wire   [59:0] select_ln321_12_fu_778_p3;
wire   [59:0] select_ln321_14_fu_794_p3;
wire   [59:0] select_ln321_16_fu_810_p3;
wire   [59:0] select_ln321_17_fu_818_p3;
wire   [59:0] select_ln321_19_fu_834_p3;
wire   [59:0] inElem_V_19_fu_850_p3;
wire   [0:0] icmp_ln271_fu_930_p2;
wire  signed [2:0] wgt_M_instance_0_V_fu_944_p1;
wire   [3:0] trunc_ln647_fu_1088_p1;
wire   [3:0] mul_ln1352_fu_1100_p0;
wire  signed [6:0] mul_ln1352_fu_1100_p2;
wire  signed [2:0] wgt_M_instance_1_V_fu_948_p4;
wire   [3:0] arg_V_read_assign_1_fu_1110_p4;
wire   [3:0] mul_ln1352_1_fu_1128_p0;
wire  signed [6:0] mul_ln1352_1_fu_1128_p2;
wire  signed [2:0] wgt_M_instance_2_V_fu_958_p4;
wire   [3:0] arg_V_read_assign_2_fu_1138_p4;
wire   [3:0] mul_ln1352_2_fu_1156_p0;
wire  signed [6:0] mul_ln1352_2_fu_1156_p2;
wire  signed [2:0] wgt_M_instance_3_V_fu_968_p4;
wire   [3:0] arg_V_read_assign_3_fu_1166_p4;
wire   [3:0] mul_ln1352_3_fu_1184_p0;
wire  signed [6:0] mul_ln1352_3_fu_1184_p2;
wire  signed [2:0] wgt_M_instance_4_V_fu_978_p4;
wire   [3:0] arg_V_read_assign_4_fu_1194_p4;
wire   [3:0] mul_ln1352_4_fu_1212_p0;
wire  signed [6:0] mul_ln1352_4_fu_1212_p2;
wire  signed [2:0] wgt_M_instance_5_V_fu_988_p4;
wire   [3:0] arg_V_read_assign_5_fu_1222_p4;
wire   [3:0] mul_ln1352_5_fu_1240_p0;
wire  signed [6:0] mul_ln1352_5_fu_1240_p2;
wire  signed [2:0] wgt_M_instance_6_V_fu_998_p4;
wire   [3:0] arg_V_read_assign_6_fu_1250_p4;
wire   [3:0] mul_ln1352_6_fu_1268_p0;
wire  signed [6:0] mul_ln1352_6_fu_1268_p2;
wire  signed [2:0] wgt_M_instance_7_V_fu_1008_p4;
wire   [3:0] arg_V_read_assign_7_fu_1278_p4;
wire   [3:0] mul_ln1352_7_fu_1296_p0;
wire  signed [6:0] mul_ln1352_7_fu_1296_p2;
wire  signed [2:0] wgt_M_instance_8_V_fu_1018_p4;
wire   [3:0] arg_V_read_assign_8_fu_1306_p4;
wire   [3:0] mul_ln1352_8_fu_1324_p0;
wire  signed [6:0] mul_ln1352_8_fu_1324_p2;
wire  signed [2:0] p_Result_9_fu_1028_p4;
wire   [3:0] arg_V_read_assign_9_fu_1334_p4;
wire   [3:0] mul_ln1352_9_fu_1352_p0;
wire  signed [6:0] mul_ln1352_9_fu_1352_p2;
wire  signed [2:0] p_Result_s_fu_1038_p4;
wire   [3:0] arg_V_read_assign_s_fu_1362_p4;
wire   [3:0] mul_ln1352_10_fu_1380_p0;
wire  signed [6:0] mul_ln1352_10_fu_1380_p2;
wire  signed [2:0] p_Result_1_fu_1048_p4;
wire   [3:0] arg_V_read_assign_10_fu_1390_p4;
wire   [3:0] mul_ln1352_11_fu_1408_p0;
wire  signed [6:0] mul_ln1352_11_fu_1408_p2;
wire  signed [2:0] p_Result_2_fu_1058_p4;
wire   [3:0] arg_V_read_assign_11_fu_1418_p4;
wire   [3:0] mul_ln1352_12_fu_1436_p0;
wire  signed [6:0] mul_ln1352_12_fu_1436_p2;
wire  signed [2:0] p_Result_3_fu_1068_p4;
wire   [3:0] arg_V_read_assign_12_fu_1446_p4;
wire   [3:0] mul_ln1352_13_fu_1464_p0;
wire  signed [6:0] mul_ln1352_13_fu_1464_p2;
wire  signed [2:0] p_Result_4_fu_1078_p4;
wire   [3:0] arg_V_read_assign_13_fu_1474_p4;
wire   [3:0] mul_ln1352_14_fu_1492_p0;
wire  signed [6:0] mul_ln1352_14_fu_1492_p2;
wire   [13:0] res_V_fu_936_p3;
wire  signed [13:0] sext_ln700_fu_1442_p1;
wire  signed [7:0] sext_ln170_12_fu_1470_p1;
wire  signed [7:0] sext_ln170_11_fu_1414_p1;
wire   [7:0] add_ln700_1_fu_1508_p2;
wire  signed [13:0] sext_ln700_2_fu_1514_p1;
wire   [13:0] add_ln700_fu_1502_p2;
wire  signed [7:0] sext_ln170_10_fu_1386_p1;
wire  signed [7:0] sext_ln170_7_fu_1302_p1;
wire   [7:0] add_ln700_3_fu_1524_p2;
wire  signed [7:0] sext_ln170_6_fu_1274_p1;
wire  signed [7:0] sext_ln170_9_fu_1358_p1;
wire   [7:0] add_ln700_4_fu_1534_p2;
wire  signed [8:0] sext_ln700_4_fu_1540_p1;
wire  signed [8:0] sext_ln700_3_fu_1530_p1;
wire   [8:0] add_ln700_5_fu_1544_p2;
wire  signed [13:0] sext_ln700_5_fu_1550_p1;
wire   [13:0] add_ln700_2_fu_1518_p2;
wire  signed [7:0] sext_ln170_8_fu_1330_p1;
wire  signed [7:0] sext_ln170_1_fu_1134_p1;
wire   [7:0] add_ln700_7_fu_1560_p2;
wire  signed [7:0] sext_ln170_fu_1106_p1;
wire  signed [7:0] sext_ln170_3_fu_1190_p1;
wire   [7:0] add_ln700_8_fu_1570_p2;
wire  signed [8:0] sext_ln700_7_fu_1576_p1;
wire  signed [8:0] sext_ln700_6_fu_1566_p1;
wire   [8:0] add_ln700_9_fu_1580_p2;
wire  signed [7:0] sext_ln170_2_fu_1162_p1;
wire  signed [7:0] sext_ln170_5_fu_1246_p1;
wire   [7:0] add_ln700_10_fu_1590_p2;
wire  signed [7:0] sext_ln170_4_fu_1218_p1;
wire  signed [7:0] sext_ln700_1_fu_1498_p1;
wire   [7:0] add_ln700_11_fu_1600_p2;
wire  signed [8:0] sext_ln700_10_fu_1606_p1;
wire  signed [8:0] sext_ln700_9_fu_1596_p1;
wire   [8:0] add_ln700_12_fu_1610_p2;
wire  signed [9:0] sext_ln700_11_fu_1616_p1;
wire  signed [9:0] sext_ln700_8_fu_1586_p1;
wire   [9:0] add_ln700_13_fu_1620_p2;
wire  signed [13:0] sext_ln700_12_fu_1626_p1;
wire   [13:0] add_ln700_6_fu_1554_p2;
wire   [31:0] nf_fu_1680_p2;
wire   [0:0] icmp_ln301_fu_1686_p2;
wire  signed [13:0] sext_ln186_fu_1705_p1;
wire   [0:0] icmp_ln899_fu_1709_p2;
wire   [0:0] xor_ln899_fu_1714_p2;
wire   [13:0] zext_ln186_2_fu_1724_p1;
wire   [0:0] icmp_ln899_1_fu_1728_p2;
wire   [0:0] xor_ln899_1_fu_1733_p2;
wire   [13:0] zext_ln186_4_fu_1743_p1;
wire   [0:0] icmp_ln899_2_fu_1747_p2;
wire   [0:0] xor_ln899_2_fu_1752_p2;
wire   [13:0] zext_ln186_6_fu_1762_p1;
wire   [0:0] icmp_ln899_3_fu_1766_p2;
wire   [0:0] xor_ln899_3_fu_1771_p2;
wire   [13:0] zext_ln186_8_fu_1781_p1;
wire   [0:0] icmp_ln899_4_fu_1785_p2;
wire   [0:0] xor_ln899_4_fu_1790_p2;
wire   [13:0] zext_ln186_10_fu_1800_p1;
wire   [0:0] icmp_ln899_5_fu_1804_p2;
wire   [0:0] xor_ln899_5_fu_1809_p2;
wire   [13:0] zext_ln186_12_fu_1819_p1;
wire   [0:0] icmp_ln899_6_fu_1823_p2;
wire   [0:0] xor_ln899_6_fu_1828_p2;
wire   [13:0] zext_ln186_14_fu_1838_p1;
wire   [0:0] icmp_ln899_7_fu_1842_p2;
wire   [0:0] xor_ln899_7_fu_1847_p2;
wire   [13:0] zext_ln186_16_fu_1857_p1;
wire   [0:0] icmp_ln899_8_fu_1861_p2;
wire   [0:0] xor_ln899_8_fu_1866_p2;
wire   [13:0] zext_ln186_18_fu_1876_p1;
wire   [0:0] icmp_ln899_9_fu_1880_p2;
wire   [0:0] xor_ln899_9_fu_1885_p2;
wire   [13:0] zext_ln186_20_fu_1895_p1;
wire   [0:0] icmp_ln899_10_fu_1899_p2;
wire   [0:0] xor_ln899_10_fu_1904_p2;
wire   [13:0] zext_ln186_22_fu_1914_p1;
wire   [0:0] icmp_ln899_11_fu_1918_p2;
wire   [0:0] xor_ln899_11_fu_1923_p2;
wire  signed [8:0] sext_ln186_1_fu_1933_p1;
wire   [13:0] zext_ln186_24_fu_1937_p1;
wire   [0:0] icmp_ln899_12_fu_1941_p2;
wire   [0:0] xor_ln899_12_fu_1946_p2;
wire   [13:0] zext_ln186_26_fu_1956_p1;
wire   [0:0] icmp_ln899_13_fu_1960_p2;
wire   [0:0] xor_ln899_13_fu_1965_p2;
wire   [13:0] zext_ln186_28_fu_1975_p1;
wire   [0:0] icmp_ln899_14_fu_1979_p2;
wire   [0:0] xor_ln899_14_fu_1984_p2;
wire   [1:0] zext_ln186_3_fu_1739_p1;
wire   [1:0] zext_ln186_5_fu_1758_p1;
wire   [1:0] add_ln700_15_fu_1994_p2;
wire   [1:0] zext_ln186_1_fu_1720_p1;
wire   [1:0] add_ln700_16_fu_2000_p2;
wire   [1:0] zext_ln186_7_fu_1777_p1;
wire   [1:0] zext_ln186_9_fu_1796_p1;
wire   [1:0] add_ln700_17_fu_2010_p2;
wire   [1:0] zext_ln186_11_fu_1815_p1;
wire   [1:0] zext_ln186_13_fu_1834_p1;
wire   [1:0] add_ln700_18_fu_2020_p2;
wire   [2:0] zext_ln700_3_fu_2026_p1;
wire   [2:0] zext_ln700_2_fu_2016_p1;
wire   [2:0] add_ln700_19_fu_2030_p2;
wire   [2:0] zext_ln700_1_fu_2006_p1;
wire   [2:0] add_ln700_20_fu_2036_p2;
wire   [1:0] zext_ln186_15_fu_1853_p1;
wire   [1:0] zext_ln186_17_fu_1872_p1;
wire   [1:0] add_ln700_21_fu_2046_p2;
wire   [1:0] zext_ln186_19_fu_1891_p1;
wire   [1:0] zext_ln186_21_fu_1910_p1;
wire   [1:0] add_ln700_22_fu_2056_p2;
wire   [2:0] zext_ln700_6_fu_2062_p1;
wire   [2:0] zext_ln700_5_fu_2052_p1;
wire   [2:0] add_ln700_23_fu_2066_p2;
wire   [1:0] zext_ln186_23_fu_1929_p1;
wire   [1:0] zext_ln186_25_fu_1952_p1;
wire   [1:0] add_ln700_24_fu_2076_p2;
wire   [1:0] zext_ln186_27_fu_1971_p1;
wire   [1:0] zext_ln700_fu_1990_p1;
wire   [1:0] add_ln700_25_fu_2086_p2;
wire   [2:0] zext_ln700_9_fu_2092_p1;
wire   [2:0] zext_ln700_8_fu_2082_p1;
wire   [2:0] add_ln700_26_fu_2096_p2;
wire   [3:0] zext_ln700_10_fu_2102_p1;
wire   [3:0] zext_ln700_7_fu_2072_p1;
wire   [3:0] add_ln700_27_fu_2106_p2;
wire   [3:0] zext_ln700_4_fu_2042_p1;
wire   [3:0] tmp_V_fu_2112_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [6:0] mul_ln1352_10_fu_1380_p00;
wire   [6:0] mul_ln1352_11_fu_1408_p00;
wire   [6:0] mul_ln1352_12_fu_1436_p00;
wire   [6:0] mul_ln1352_13_fu_1464_p00;
wire   [6:0] mul_ln1352_14_fu_1492_p00;
wire   [6:0] mul_ln1352_1_fu_1128_p00;
wire   [6:0] mul_ln1352_2_fu_1156_p00;
wire   [6:0] mul_ln1352_3_fu_1184_p00;
wire   [6:0] mul_ln1352_4_fu_1212_p00;
wire   [6:0] mul_ln1352_5_fu_1240_p00;
wire   [6:0] mul_ln1352_6_fu_1268_p00;
wire   [6:0] mul_ln1352_7_fu_1296_p00;
wire   [6:0] mul_ln1352_8_fu_1324_p00;
wire   [6:0] mul_ln1352_9_fu_1352_p00;
wire   [6:0] mul_ln1352_fu_1100_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

StreamingFCLayer_Batch_1_Matrix_Vector_Actbkb #(
    .DataWidth( 7 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_14_address0),
    .ce0(threshs_m_thresholds_14_ce0),
    .q0(threshs_m_thresholds_14_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actcud #(
    .DataWidth( 7 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_13_address0),
    .ce0(threshs_m_thresholds_13_ce0),
    .q0(threshs_m_thresholds_13_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActdEe #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_7_address0),
    .ce0(threshs_m_thresholds_7_ce0),
    .q0(threshs_m_thresholds_7_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActeOg #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_6_address0),
    .ce0(threshs_m_thresholds_6_ce0),
    .q0(threshs_m_thresholds_6_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActfYi #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_5_address0),
    .ce0(threshs_m_thresholds_5_ce0),
    .q0(threshs_m_thresholds_5_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actg8j #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_4_address0),
    .ce0(threshs_m_thresholds_4_ce0),
    .q0(threshs_m_thresholds_4_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Acthbi #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_3_address0),
    .ce0(threshs_m_thresholds_3_ce0),
    .q0(threshs_m_thresholds_3_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actibs #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_2_address0),
    .ce0(threshs_m_thresholds_2_ce0),
    .q0(threshs_m_thresholds_2_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActjbC #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_1_address0),
    .ce0(threshs_m_thresholds_1_ce0),
    .q0(threshs_m_thresholds_1_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActkbM #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_address0),
    .ce0(threshs_m_thresholds_ce0),
    .q0(threshs_m_thresholds_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActlbW #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_12_address0),
    .ce0(threshs_m_thresholds_12_ce0),
    .q0(threshs_m_thresholds_12_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actmb6 #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_11_address0),
    .ce0(threshs_m_thresholds_11_ce0),
    .q0(threshs_m_thresholds_11_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actncg #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_10_address0),
    .ce0(threshs_m_thresholds_10_ce0),
    .q0(threshs_m_thresholds_10_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_Actocq #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_9_address0),
    .ce0(threshs_m_thresholds_9_ce0),
    .q0(threshs_m_thresholds_9_q0)
);

StreamingFCLayer_Batch_1_Matrix_Vector_ActpcA #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_8_address0),
    .ce0(threshs_m_thresholds_8_ce0),
    .q0(threshs_m_thresholds_8_q0)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 60 ),
    .din1_WIDTH( 60 ),
    .din2_WIDTH( 60 ),
    .din3_WIDTH( 60 ),
    .din4_WIDTH( 60 ),
    .din5_WIDTH( 60 ),
    .din6_WIDTH( 60 ),
    .din7_WIDTH( 60 ),
    .din8_WIDTH( 60 ),
    .din9_WIDTH( 60 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 60 ))
StreamingFCLayer_qcK_U1(
    .din0(inElem_V_1_fu_208),
    .din1(inElem_V_3_fu_212),
    .din2(inElem_V_5_fu_216),
    .din3(inElem_V_7_fu_220),
    .din4(inElem_V_8_fu_224),
    .din5(inElem_V_6_fu_228),
    .din6(inElem_V_4_fu_232),
    .din7(inElem_V_2_fu_236),
    .din8(inElem_V_9_fu_240),
    .din9(inElem_V_10_fu_244),
    .din10(inElem_V_22_fu_550_p11),
    .dout(inElem_V_22_fu_550_p12)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U2(
    .din0(mul_ln1352_fu_1100_p0),
    .din1(wgt_M_instance_0_V_fu_944_p1),
    .dout(mul_ln1352_fu_1100_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U3(
    .din0(mul_ln1352_1_fu_1128_p0),
    .din1(wgt_M_instance_1_V_fu_948_p4),
    .dout(mul_ln1352_1_fu_1128_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U4(
    .din0(mul_ln1352_2_fu_1156_p0),
    .din1(wgt_M_instance_2_V_fu_958_p4),
    .dout(mul_ln1352_2_fu_1156_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U5(
    .din0(mul_ln1352_3_fu_1184_p0),
    .din1(wgt_M_instance_3_V_fu_968_p4),
    .dout(mul_ln1352_3_fu_1184_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U6(
    .din0(mul_ln1352_4_fu_1212_p0),
    .din1(wgt_M_instance_4_V_fu_978_p4),
    .dout(mul_ln1352_4_fu_1212_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U7(
    .din0(mul_ln1352_5_fu_1240_p0),
    .din1(wgt_M_instance_5_V_fu_988_p4),
    .dout(mul_ln1352_5_fu_1240_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U8(
    .din0(mul_ln1352_6_fu_1268_p0),
    .din1(wgt_M_instance_6_V_fu_998_p4),
    .dout(mul_ln1352_6_fu_1268_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U9(
    .din0(mul_ln1352_7_fu_1296_p0),
    .din1(wgt_M_instance_7_V_fu_1008_p4),
    .dout(mul_ln1352_7_fu_1296_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U10(
    .din0(mul_ln1352_8_fu_1324_p0),
    .din1(wgt_M_instance_8_V_fu_1018_p4),
    .dout(mul_ln1352_8_fu_1324_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U11(
    .din0(mul_ln1352_9_fu_1352_p0),
    .din1(p_Result_9_fu_1028_p4),
    .dout(mul_ln1352_9_fu_1352_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U12(
    .din0(mul_ln1352_10_fu_1380_p0),
    .din1(p_Result_s_fu_1038_p4),
    .dout(mul_ln1352_10_fu_1380_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U13(
    .din0(mul_ln1352_11_fu_1408_p0),
    .din1(p_Result_1_fu_1048_p4),
    .dout(mul_ln1352_11_fu_1408_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U14(
    .din0(mul_ln1352_12_fu_1436_p0),
    .din1(p_Result_2_fu_1058_p4),
    .dout(mul_ln1352_12_fu_1436_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U15(
    .din0(mul_ln1352_13_fu_1464_p0),
    .din1(p_Result_3_fu_1068_p4),
    .dout(mul_ln1352_13_fu_1464_p2)
);

StreamingFCLayer_Batch_1_StreamingFCLayer_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
StreamingFCLayer_rcU_U16(
    .din0(mul_ln1352_14_fu_1492_p0),
    .din1(p_Result_4_fu_1078_p4),
    .dout(mul_ln1352_14_fu_1492_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_492_p2 == 1'd0))) begin
        i_0_reg_462 <= i_fu_498_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_462 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_1642_p2 == 1'd1) & (icmp_ln248_fu_492_p2 == 1'd0))) begin
        nf_assign_fu_204 <= nf_1_fu_1692_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_204 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_1642_p2 == 1'd0) & (icmp_ln248_fu_492_p2 == 1'd0))) begin
        sf_1_fu_200 <= sf_fu_1636_p2;
    end else if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_1642_p2 == 1'd1) & (icmp_ln248_fu_492_p2 == 1'd0)))) begin
        sf_1_fu_200 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_492_p2 == 1'd0))) begin
        accu_V_0_0_0_fu_196 <= add_ln700_14_fu_1630_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_492_p2 == 1'd0))) begin
        add_ln700_14_reg_2218 <= add_ln700_14_fu_1630_p2;
        icmp_ln289_reg_2237 <= icmp_ln289_fu_1642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_507_p2 == 1'd1) & (icmp_ln248_fu_492_p2 == 1'd0))) begin
        inElem_V_10_fu_244 <= inElem_V_fu_690_p3;
        inElem_V_1_fu_208 <= inElem_V_21_fu_866_p3;
        inElem_V_2_fu_236 <= inElem_V_13_fu_738_p3;
        inElem_V_3_fu_212 <= inElem_V_20_fu_858_p3;
        inElem_V_4_fu_232 <= inElem_V_14_fu_762_p3;
        inElem_V_5_fu_216 <= inElem_V_18_fu_842_p3;
        inElem_V_6_fu_228 <= inElem_V_15_fu_786_p3;
        inElem_V_7_fu_220 <= inElem_V_17_fu_826_p3;
        inElem_V_8_fu_224 <= inElem_V_16_fu_802_p3;
        inElem_V_9_fu_240 <= inElem_V_12_fu_706_p3;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_492_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_492_p2 == 1'd0)) begin
        if ((icmp_ln252_fu_507_p2 == 1'd0)) begin
            ap_phi_mux_act_m_val_V_phi_fu_476_p4 = inElem_V_22_fu_550_p12;
        end else if ((icmp_ln252_fu_507_p2 == 1'd1)) begin
            ap_phi_mux_act_m_val_V_phi_fu_476_p4 = tmp_V_2_fu_577_p1;
        end else begin
            ap_phi_mux_act_m_val_V_phi_fu_476_p4 = ap_phi_reg_pp0_iter0_act_m_val_V_reg_473;
        end
    end else begin
        ap_phi_mux_act_m_val_V_phi_fu_476_p4 = ap_phi_reg_pp0_iter0_act_m_val_V_reg_473;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln252_fu_507_p2 == 1'd1) & (icmp_ln248_fu_492_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op48_read_state2 == 1'b1))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln289_reg_2237 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_2237 == 1'd1))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_10_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_11_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_12_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_13_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_14_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_1_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_2_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_3_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_4_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_5_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_6_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_7_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_8_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_9_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln248_fu_492_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_V_V_TDATA_blk_n = weight_V_V_TVALID;
    end else begin
        weight_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_492_p2 == 1'd0))) begin
        weight_V_V_TREADY = 1'b1;
    end else begin
        weight_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln248_fu_492_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln248_fu_492_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_10_fu_1590_p2 = ($signed(sext_ln170_2_fu_1162_p1) + $signed(sext_ln170_5_fu_1246_p1));

assign add_ln700_11_fu_1600_p2 = ($signed(sext_ln170_4_fu_1218_p1) + $signed(sext_ln700_1_fu_1498_p1));

assign add_ln700_12_fu_1610_p2 = ($signed(sext_ln700_10_fu_1606_p1) + $signed(sext_ln700_9_fu_1596_p1));

assign add_ln700_13_fu_1620_p2 = ($signed(sext_ln700_11_fu_1616_p1) + $signed(sext_ln700_8_fu_1586_p1));

assign add_ln700_14_fu_1630_p2 = ($signed(sext_ln700_12_fu_1626_p1) + $signed(add_ln700_6_fu_1554_p2));

assign add_ln700_15_fu_1994_p2 = (zext_ln186_3_fu_1739_p1 + zext_ln186_5_fu_1758_p1);

assign add_ln700_16_fu_2000_p2 = (add_ln700_15_fu_1994_p2 + zext_ln186_1_fu_1720_p1);

assign add_ln700_17_fu_2010_p2 = (zext_ln186_7_fu_1777_p1 + zext_ln186_9_fu_1796_p1);

assign add_ln700_18_fu_2020_p2 = (zext_ln186_11_fu_1815_p1 + zext_ln186_13_fu_1834_p1);

assign add_ln700_19_fu_2030_p2 = (zext_ln700_3_fu_2026_p1 + zext_ln700_2_fu_2016_p1);

assign add_ln700_1_fu_1508_p2 = ($signed(sext_ln170_12_fu_1470_p1) + $signed(sext_ln170_11_fu_1414_p1));

assign add_ln700_20_fu_2036_p2 = (add_ln700_19_fu_2030_p2 + zext_ln700_1_fu_2006_p1);

assign add_ln700_21_fu_2046_p2 = (zext_ln186_15_fu_1853_p1 + zext_ln186_17_fu_1872_p1);

assign add_ln700_22_fu_2056_p2 = (zext_ln186_19_fu_1891_p1 + zext_ln186_21_fu_1910_p1);

assign add_ln700_23_fu_2066_p2 = (zext_ln700_6_fu_2062_p1 + zext_ln700_5_fu_2052_p1);

assign add_ln700_24_fu_2076_p2 = (zext_ln186_23_fu_1929_p1 + zext_ln186_25_fu_1952_p1);

assign add_ln700_25_fu_2086_p2 = (zext_ln186_27_fu_1971_p1 + zext_ln700_fu_1990_p1);

assign add_ln700_26_fu_2096_p2 = (zext_ln700_9_fu_2092_p1 + zext_ln700_8_fu_2082_p1);

assign add_ln700_27_fu_2106_p2 = (zext_ln700_10_fu_2102_p1 + zext_ln700_7_fu_2072_p1);

assign add_ln700_2_fu_1518_p2 = ($signed(sext_ln700_2_fu_1514_p1) + $signed(add_ln700_fu_1502_p2));

assign add_ln700_3_fu_1524_p2 = ($signed(sext_ln170_10_fu_1386_p1) + $signed(sext_ln170_7_fu_1302_p1));

assign add_ln700_4_fu_1534_p2 = ($signed(sext_ln170_6_fu_1274_p1) + $signed(sext_ln170_9_fu_1358_p1));

assign add_ln700_5_fu_1544_p2 = ($signed(sext_ln700_4_fu_1540_p1) + $signed(sext_ln700_3_fu_1530_p1));

assign add_ln700_6_fu_1554_p2 = ($signed(sext_ln700_5_fu_1550_p1) + $signed(add_ln700_2_fu_1518_p2));

assign add_ln700_7_fu_1560_p2 = ($signed(sext_ln170_8_fu_1330_p1) + $signed(sext_ln170_1_fu_1134_p1));

assign add_ln700_8_fu_1570_p2 = ($signed(sext_ln170_fu_1106_p1) + $signed(sext_ln170_3_fu_1190_p1));

assign add_ln700_9_fu_1580_p2 = ($signed(sext_ln700_7_fu_1576_p1) + $signed(sext_ln700_6_fu_1566_p1));

assign add_ln700_fu_1502_p2 = ($signed(res_V_fu_936_p3) + $signed(sext_ln700_fu_1442_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op48_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_492_p2 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op48_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_492_p2 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op48_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_492_p2 == 1'd0)))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((in_V_V_TVALID == 1'b0) & (ap_predicate_op48_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_492_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_io = ((out_V_V_TREADY == 1'b0) & (icmp_ln289_reg_2237 == 1'd1));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_473 = 'bx;

always @ (*) begin
    ap_predicate_op48_read_state2 = ((icmp_ln252_fu_507_p2 == 1'd1) & (icmp_ln248_fu_492_p2 == 1'd0));
end

assign arg_V_read_assign_10_fu_1390_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[47:44]}};

assign arg_V_read_assign_11_fu_1418_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[51:48]}};

assign arg_V_read_assign_12_fu_1446_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[55:52]}};

assign arg_V_read_assign_13_fu_1474_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[59:56]}};

assign arg_V_read_assign_1_fu_1110_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[7:4]}};

assign arg_V_read_assign_2_fu_1138_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[11:8]}};

assign arg_V_read_assign_3_fu_1166_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[15:12]}};

assign arg_V_read_assign_4_fu_1194_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[19:16]}};

assign arg_V_read_assign_5_fu_1222_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[23:20]}};

assign arg_V_read_assign_6_fu_1250_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[27:24]}};

assign arg_V_read_assign_7_fu_1278_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[31:28]}};

assign arg_V_read_assign_8_fu_1306_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[35:32]}};

assign arg_V_read_assign_9_fu_1334_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[39:36]}};

assign arg_V_read_assign_s_fu_1362_p4 = {{ap_phi_mux_act_m_val_V_phi_fu_476_p4[43:40]}};

assign i_fu_498_p2 = (i_0_reg_462 + 14'd1);

assign icmp_ln248_fu_492_p2 = ((i_0_reg_462 == 14'd16000) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_507_p2 = ((nf_assign_fu_204 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_930_p2 = ((sf_1_fu_200 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_1642_p2 = ((sf_fu_1636_p2 == 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_1686_p2 = ((nf_fu_1680_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_592_p2 = ((trunc_ln321_fu_582_p1 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_598_p2 = ((trunc_ln321_fu_582_p1 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_604_p2 = ((trunc_ln321_fu_582_p1 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_610_p2 = ((trunc_ln321_fu_582_p1 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_616_p2 = ((trunc_ln321_fu_582_p1 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_6_fu_622_p2 = ((trunc_ln321_fu_582_p1 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_7_fu_628_p2 = ((trunc_ln321_fu_582_p1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_8_fu_634_p2 = ((trunc_ln321_fu_582_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_586_p2 = ((trunc_ln321_fu_582_p1 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln899_10_fu_1899_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_20_fu_1895_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_11_fu_1918_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_22_fu_1914_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_12_fu_1941_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_24_fu_1937_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_13_fu_1960_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_26_fu_1956_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_14_fu_1979_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_28_fu_1975_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_1728_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_2_fu_1724_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_1747_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_4_fu_1743_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_3_fu_1766_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_6_fu_1762_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_4_fu_1785_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_8_fu_1781_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_5_fu_1804_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_10_fu_1800_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_6_fu_1823_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_12_fu_1819_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_7_fu_1842_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_14_fu_1838_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_8_fu_1861_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_16_fu_1857_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_9_fu_1880_p2 = (($signed(add_ln700_14_reg_2218) < $signed(zext_ln186_18_fu_1876_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1709_p2 = (($signed(add_ln700_14_reg_2218) < $signed(sext_ln186_fu_1705_p1)) ? 1'b1 : 1'b0);

assign inElem_V_12_fu_706_p3 = ((or_ln321_6_fu_684_p2[0:0] === 1'b1) ? inElem_V_9_fu_240 : select_ln321_2_fu_698_p3);

assign inElem_V_13_fu_738_p3 = ((or_ln321_6_fu_684_p2[0:0] === 1'b1) ? select_ln321_6_fu_730_p3 : inElem_V_2_fu_236);

assign inElem_V_14_fu_762_p3 = ((or_ln321_4_fu_672_p2[0:0] === 1'b1) ? inElem_V_4_fu_232 : select_ln321_9_fu_754_p3);

assign inElem_V_15_fu_786_p3 = ((or_ln321_4_fu_672_p2[0:0] === 1'b1) ? inElem_V_6_fu_228 : select_ln321_12_fu_778_p3);

assign inElem_V_16_fu_802_p3 = ((or_ln321_4_fu_672_p2[0:0] === 1'b1) ? inElem_V_8_fu_224 : select_ln321_14_fu_794_p3);

assign inElem_V_17_fu_826_p3 = ((or_ln321_4_fu_672_p2[0:0] === 1'b1) ? select_ln321_17_fu_818_p3 : inElem_V_7_fu_220);

assign inElem_V_18_fu_842_p3 = ((or_ln321_fu_640_p2[0:0] === 1'b1) ? inElem_V_5_fu_216 : select_ln321_19_fu_834_p3);

assign inElem_V_19_fu_850_p3 = ((icmp_ln321_7_fu_628_p2[0:0] === 1'b1) ? tmp_V_2_fu_577_p1 : inElem_V_3_fu_212);

assign inElem_V_20_fu_858_p3 = ((icmp_ln321_8_fu_634_p2[0:0] === 1'b1) ? inElem_V_3_fu_212 : inElem_V_19_fu_850_p3);

assign inElem_V_21_fu_866_p3 = ((icmp_ln321_8_fu_634_p2[0:0] === 1'b1) ? tmp_V_2_fu_577_p1 : inElem_V_1_fu_208);

assign inElem_V_22_fu_550_p11 = sf_1_fu_200[3:0];

assign inElem_V_fu_690_p3 = ((or_ln321_6_fu_684_p2[0:0] === 1'b1) ? inElem_V_10_fu_244 : select_ln321_fu_664_p3);

assign mul_ln1352_10_fu_1380_p0 = mul_ln1352_10_fu_1380_p00;

assign mul_ln1352_10_fu_1380_p00 = arg_V_read_assign_s_fu_1362_p4;

assign mul_ln1352_11_fu_1408_p0 = mul_ln1352_11_fu_1408_p00;

assign mul_ln1352_11_fu_1408_p00 = arg_V_read_assign_10_fu_1390_p4;

assign mul_ln1352_12_fu_1436_p0 = mul_ln1352_12_fu_1436_p00;

assign mul_ln1352_12_fu_1436_p00 = arg_V_read_assign_11_fu_1418_p4;

assign mul_ln1352_13_fu_1464_p0 = mul_ln1352_13_fu_1464_p00;

assign mul_ln1352_13_fu_1464_p00 = arg_V_read_assign_12_fu_1446_p4;

assign mul_ln1352_14_fu_1492_p0 = mul_ln1352_14_fu_1492_p00;

assign mul_ln1352_14_fu_1492_p00 = arg_V_read_assign_13_fu_1474_p4;

assign mul_ln1352_1_fu_1128_p0 = mul_ln1352_1_fu_1128_p00;

assign mul_ln1352_1_fu_1128_p00 = arg_V_read_assign_1_fu_1110_p4;

assign mul_ln1352_2_fu_1156_p0 = mul_ln1352_2_fu_1156_p00;

assign mul_ln1352_2_fu_1156_p00 = arg_V_read_assign_2_fu_1138_p4;

assign mul_ln1352_3_fu_1184_p0 = mul_ln1352_3_fu_1184_p00;

assign mul_ln1352_3_fu_1184_p00 = arg_V_read_assign_3_fu_1166_p4;

assign mul_ln1352_4_fu_1212_p0 = mul_ln1352_4_fu_1212_p00;

assign mul_ln1352_4_fu_1212_p00 = arg_V_read_assign_4_fu_1194_p4;

assign mul_ln1352_5_fu_1240_p0 = mul_ln1352_5_fu_1240_p00;

assign mul_ln1352_5_fu_1240_p00 = arg_V_read_assign_5_fu_1222_p4;

assign mul_ln1352_6_fu_1268_p0 = mul_ln1352_6_fu_1268_p00;

assign mul_ln1352_6_fu_1268_p00 = arg_V_read_assign_6_fu_1250_p4;

assign mul_ln1352_7_fu_1296_p0 = mul_ln1352_7_fu_1296_p00;

assign mul_ln1352_7_fu_1296_p00 = arg_V_read_assign_7_fu_1278_p4;

assign mul_ln1352_8_fu_1324_p0 = mul_ln1352_8_fu_1324_p00;

assign mul_ln1352_8_fu_1324_p00 = arg_V_read_assign_8_fu_1306_p4;

assign mul_ln1352_9_fu_1352_p0 = mul_ln1352_9_fu_1352_p00;

assign mul_ln1352_9_fu_1352_p00 = arg_V_read_assign_9_fu_1334_p4;

assign mul_ln1352_fu_1100_p0 = mul_ln1352_fu_1100_p00;

assign mul_ln1352_fu_1100_p00 = trunc_ln647_fu_1088_p1;

assign nf_1_fu_1692_p3 = ((icmp_ln301_fu_1686_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_1680_p2);

assign nf_fu_1680_p2 = (nf_assign_fu_204 + 32'd1);

assign or_ln321_1_fu_646_p2 = (icmp_ln321_6_fu_622_p2 | icmp_ln321_5_fu_616_p2);

assign or_ln321_2_fu_652_p2 = (icmp_ln321_4_fu_610_p2 | icmp_ln321_3_fu_604_p2);

assign or_ln321_3_fu_658_p2 = (icmp_ln321_2_fu_598_p2 | icmp_ln321_1_fu_592_p2);

assign or_ln321_4_fu_672_p2 = (or_ln321_fu_640_p2 | or_ln321_1_fu_646_p2);

assign or_ln321_5_fu_678_p2 = (or_ln321_3_fu_658_p2 | or_ln321_2_fu_652_p2);

assign or_ln321_6_fu_684_p2 = (or_ln321_5_fu_678_p2 | or_ln321_4_fu_672_p2);

assign or_ln321_fu_640_p2 = (icmp_ln321_8_fu_634_p2 | icmp_ln321_7_fu_628_p2);

assign out_V_V_TDATA = tmp_V_fu_2112_p2;

assign p_Result_1_fu_1048_p4 = {{weight_V_V_TDATA[35:33]}};

assign p_Result_2_fu_1058_p4 = {{weight_V_V_TDATA[38:36]}};

assign p_Result_3_fu_1068_p4 = {{weight_V_V_TDATA[41:39]}};

assign p_Result_4_fu_1078_p4 = {{weight_V_V_TDATA[44:42]}};

assign p_Result_9_fu_1028_p4 = {{weight_V_V_TDATA[29:27]}};

assign p_Result_s_fu_1038_p4 = {{weight_V_V_TDATA[32:30]}};

assign res_V_fu_936_p3 = ((icmp_ln271_fu_930_p2[0:0] === 1'b1) ? 14'd0 : accu_V_0_0_0_fu_196);

assign select_ln321_11_fu_770_p3 = ((icmp_ln321_4_fu_610_p2[0:0] === 1'b1) ? inElem_V_6_fu_228 : tmp_V_2_fu_577_p1);

assign select_ln321_12_fu_778_p3 = ((or_ln321_2_fu_652_p2[0:0] === 1'b1) ? select_ln321_11_fu_770_p3 : inElem_V_6_fu_228);

assign select_ln321_14_fu_794_p3 = ((icmp_ln321_4_fu_610_p2[0:0] === 1'b1) ? tmp_V_2_fu_577_p1 : inElem_V_8_fu_224);

assign select_ln321_16_fu_810_p3 = ((icmp_ln321_6_fu_622_p2[0:0] === 1'b1) ? inElem_V_7_fu_220 : tmp_V_2_fu_577_p1);

assign select_ln321_17_fu_818_p3 = ((or_ln321_fu_640_p2[0:0] === 1'b1) ? inElem_V_7_fu_220 : select_ln321_16_fu_810_p3);

assign select_ln321_19_fu_834_p3 = ((icmp_ln321_6_fu_622_p2[0:0] === 1'b1) ? tmp_V_2_fu_577_p1 : inElem_V_5_fu_216);

assign select_ln321_2_fu_698_p3 = ((icmp_ln321_fu_586_p2[0:0] === 1'b1) ? tmp_V_2_fu_577_p1 : inElem_V_9_fu_240);

assign select_ln321_4_fu_714_p3 = ((icmp_ln321_2_fu_598_p2[0:0] === 1'b1) ? inElem_V_2_fu_236 : tmp_V_2_fu_577_p1);

assign select_ln321_5_fu_722_p3 = ((or_ln321_2_fu_652_p2[0:0] === 1'b1) ? inElem_V_2_fu_236 : select_ln321_4_fu_714_p3);

assign select_ln321_6_fu_730_p3 = ((or_ln321_4_fu_672_p2[0:0] === 1'b1) ? inElem_V_2_fu_236 : select_ln321_5_fu_722_p3);

assign select_ln321_8_fu_746_p3 = ((icmp_ln321_2_fu_598_p2[0:0] === 1'b1) ? tmp_V_2_fu_577_p1 : inElem_V_4_fu_232);

assign select_ln321_9_fu_754_p3 = ((or_ln321_2_fu_652_p2[0:0] === 1'b1) ? inElem_V_4_fu_232 : select_ln321_8_fu_746_p3);

assign select_ln321_fu_664_p3 = ((icmp_ln321_fu_586_p2[0:0] === 1'b1) ? inElem_V_10_fu_244 : tmp_V_2_fu_577_p1);

assign sext_ln170_10_fu_1386_p1 = mul_ln1352_10_fu_1380_p2;

assign sext_ln170_11_fu_1414_p1 = mul_ln1352_11_fu_1408_p2;

assign sext_ln170_12_fu_1470_p1 = mul_ln1352_13_fu_1464_p2;

assign sext_ln170_1_fu_1134_p1 = mul_ln1352_1_fu_1128_p2;

assign sext_ln170_2_fu_1162_p1 = mul_ln1352_2_fu_1156_p2;

assign sext_ln170_3_fu_1190_p1 = mul_ln1352_3_fu_1184_p2;

assign sext_ln170_4_fu_1218_p1 = mul_ln1352_4_fu_1212_p2;

assign sext_ln170_5_fu_1246_p1 = mul_ln1352_5_fu_1240_p2;

assign sext_ln170_6_fu_1274_p1 = mul_ln1352_6_fu_1268_p2;

assign sext_ln170_7_fu_1302_p1 = mul_ln1352_7_fu_1296_p2;

assign sext_ln170_8_fu_1330_p1 = mul_ln1352_8_fu_1324_p2;

assign sext_ln170_9_fu_1358_p1 = mul_ln1352_9_fu_1352_p2;

assign sext_ln170_fu_1106_p1 = mul_ln1352_fu_1100_p2;

assign sext_ln186_1_fu_1933_p1 = $signed(threshs_m_thresholds_10_q0);

assign sext_ln186_fu_1705_p1 = $signed(threshs_m_thresholds_14_q0);

assign sext_ln700_10_fu_1606_p1 = $signed(add_ln700_11_fu_1600_p2);

assign sext_ln700_11_fu_1616_p1 = $signed(add_ln700_12_fu_1610_p2);

assign sext_ln700_12_fu_1626_p1 = $signed(add_ln700_13_fu_1620_p2);

assign sext_ln700_1_fu_1498_p1 = mul_ln1352_14_fu_1492_p2;

assign sext_ln700_2_fu_1514_p1 = $signed(add_ln700_1_fu_1508_p2);

assign sext_ln700_3_fu_1530_p1 = $signed(add_ln700_3_fu_1524_p2);

assign sext_ln700_4_fu_1540_p1 = $signed(add_ln700_4_fu_1534_p2);

assign sext_ln700_5_fu_1550_p1 = $signed(add_ln700_5_fu_1544_p2);

assign sext_ln700_6_fu_1566_p1 = $signed(add_ln700_7_fu_1560_p2);

assign sext_ln700_7_fu_1576_p1 = $signed(add_ln700_8_fu_1570_p2);

assign sext_ln700_8_fu_1586_p1 = $signed(add_ln700_9_fu_1580_p2);

assign sext_ln700_9_fu_1596_p1 = $signed(add_ln700_10_fu_1590_p2);

assign sext_ln700_fu_1442_p1 = mul_ln1352_12_fu_1436_p2;

assign sf_fu_1636_p2 = (32'd1 + sf_1_fu_200);

assign threshs_m_thresholds_10_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_11_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_12_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_13_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_14_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_1_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_2_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_3_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_4_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_5_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_6_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_7_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_8_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_9_address0 = zext_ln186_fu_1661_p1;

assign threshs_m_thresholds_address0 = zext_ln186_fu_1661_p1;

assign tmp_V_2_fu_577_p1 = in_V_V_TDATA[59:0];

assign tmp_V_fu_2112_p2 = (add_ln700_27_fu_2106_p2 + zext_ln700_4_fu_2042_p1);

assign trunc_ln321_fu_582_p1 = sf_1_fu_200[3:0];

assign trunc_ln647_fu_1088_p1 = ap_phi_mux_act_m_val_V_phi_fu_476_p4[3:0];

assign wgt_M_instance_0_V_fu_944_p1 = weight_V_V_TDATA[2:0];

assign wgt_M_instance_1_V_fu_948_p4 = {{weight_V_V_TDATA[5:3]}};

assign wgt_M_instance_2_V_fu_958_p4 = {{weight_V_V_TDATA[8:6]}};

assign wgt_M_instance_3_V_fu_968_p4 = {{weight_V_V_TDATA[11:9]}};

assign wgt_M_instance_4_V_fu_978_p4 = {{weight_V_V_TDATA[14:12]}};

assign wgt_M_instance_5_V_fu_988_p4 = {{weight_V_V_TDATA[17:15]}};

assign wgt_M_instance_6_V_fu_998_p4 = {{weight_V_V_TDATA[20:18]}};

assign wgt_M_instance_7_V_fu_1008_p4 = {{weight_V_V_TDATA[23:21]}};

assign wgt_M_instance_8_V_fu_1018_p4 = {{weight_V_V_TDATA[26:24]}};

assign xor_ln899_10_fu_1904_p2 = (icmp_ln899_10_fu_1899_p2 ^ 1'd1);

assign xor_ln899_11_fu_1923_p2 = (icmp_ln899_11_fu_1918_p2 ^ 1'd1);

assign xor_ln899_12_fu_1946_p2 = (icmp_ln899_12_fu_1941_p2 ^ 1'd1);

assign xor_ln899_13_fu_1965_p2 = (icmp_ln899_13_fu_1960_p2 ^ 1'd1);

assign xor_ln899_14_fu_1984_p2 = (icmp_ln899_14_fu_1979_p2 ^ 1'd1);

assign xor_ln899_1_fu_1733_p2 = (icmp_ln899_1_fu_1728_p2 ^ 1'd1);

assign xor_ln899_2_fu_1752_p2 = (icmp_ln899_2_fu_1747_p2 ^ 1'd1);

assign xor_ln899_3_fu_1771_p2 = (icmp_ln899_3_fu_1766_p2 ^ 1'd1);

assign xor_ln899_4_fu_1790_p2 = (icmp_ln899_4_fu_1785_p2 ^ 1'd1);

assign xor_ln899_5_fu_1809_p2 = (icmp_ln899_5_fu_1804_p2 ^ 1'd1);

assign xor_ln899_6_fu_1828_p2 = (icmp_ln899_6_fu_1823_p2 ^ 1'd1);

assign xor_ln899_7_fu_1847_p2 = (icmp_ln899_7_fu_1842_p2 ^ 1'd1);

assign xor_ln899_8_fu_1866_p2 = (icmp_ln899_8_fu_1861_p2 ^ 1'd1);

assign xor_ln899_9_fu_1885_p2 = (icmp_ln899_9_fu_1880_p2 ^ 1'd1);

assign xor_ln899_fu_1714_p2 = (icmp_ln899_fu_1709_p2 ^ 1'd1);

assign zext_ln186_10_fu_1800_p1 = threshs_m_thresholds_4_q0;

assign zext_ln186_11_fu_1815_p1 = xor_ln899_5_fu_1809_p2;

assign zext_ln186_12_fu_1819_p1 = threshs_m_thresholds_3_q0;

assign zext_ln186_13_fu_1834_p1 = xor_ln899_6_fu_1828_p2;

assign zext_ln186_14_fu_1838_p1 = threshs_m_thresholds_2_q0;

assign zext_ln186_15_fu_1853_p1 = xor_ln899_7_fu_1847_p2;

assign zext_ln186_16_fu_1857_p1 = threshs_m_thresholds_1_q0;

assign zext_ln186_17_fu_1872_p1 = xor_ln899_8_fu_1866_p2;

assign zext_ln186_18_fu_1876_p1 = threshs_m_thresholds_q0;

assign zext_ln186_19_fu_1891_p1 = xor_ln899_9_fu_1885_p2;

assign zext_ln186_1_fu_1720_p1 = xor_ln899_fu_1714_p2;

assign zext_ln186_20_fu_1895_p1 = threshs_m_thresholds_12_q0;

assign zext_ln186_21_fu_1910_p1 = xor_ln899_10_fu_1904_p2;

assign zext_ln186_22_fu_1914_p1 = threshs_m_thresholds_11_q0;

assign zext_ln186_23_fu_1929_p1 = xor_ln899_11_fu_1923_p2;

assign zext_ln186_24_fu_1937_p1 = $unsigned(sext_ln186_1_fu_1933_p1);

assign zext_ln186_25_fu_1952_p1 = xor_ln899_12_fu_1946_p2;

assign zext_ln186_26_fu_1956_p1 = threshs_m_thresholds_9_q0;

assign zext_ln186_27_fu_1971_p1 = xor_ln899_13_fu_1965_p2;

assign zext_ln186_28_fu_1975_p1 = threshs_m_thresholds_8_q0;

assign zext_ln186_2_fu_1724_p1 = threshs_m_thresholds_13_q0;

assign zext_ln186_3_fu_1739_p1 = xor_ln899_1_fu_1733_p2;

assign zext_ln186_4_fu_1743_p1 = threshs_m_thresholds_7_q0;

assign zext_ln186_5_fu_1758_p1 = xor_ln899_2_fu_1752_p2;

assign zext_ln186_6_fu_1762_p1 = threshs_m_thresholds_6_q0;

assign zext_ln186_7_fu_1777_p1 = xor_ln899_3_fu_1771_p2;

assign zext_ln186_8_fu_1781_p1 = threshs_m_thresholds_5_q0;

assign zext_ln186_9_fu_1796_p1 = xor_ln899_4_fu_1790_p2;

assign zext_ln186_fu_1661_p1 = nf_assign_fu_204;

assign zext_ln700_10_fu_2102_p1 = add_ln700_26_fu_2096_p2;

assign zext_ln700_1_fu_2006_p1 = add_ln700_16_fu_2000_p2;

assign zext_ln700_2_fu_2016_p1 = add_ln700_17_fu_2010_p2;

assign zext_ln700_3_fu_2026_p1 = add_ln700_18_fu_2020_p2;

assign zext_ln700_4_fu_2042_p1 = add_ln700_20_fu_2036_p2;

assign zext_ln700_5_fu_2052_p1 = add_ln700_21_fu_2046_p2;

assign zext_ln700_6_fu_2062_p1 = add_ln700_22_fu_2056_p2;

assign zext_ln700_7_fu_2072_p1 = add_ln700_23_fu_2066_p2;

assign zext_ln700_8_fu_2082_p1 = add_ln700_24_fu_2076_p2;

assign zext_ln700_9_fu_2092_p1 = add_ln700_25_fu_2086_p2;

assign zext_ln700_fu_1990_p1 = xor_ln899_14_fu_1984_p2;

endmodule //StreamingFCLayer_Batch_1_Matrix_Vector_Activa
